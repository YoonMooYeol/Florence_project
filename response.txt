<!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <meta name="robots" content="NONE,NOARCHIVE">
  <title>ValidationError
          at /v1/llm/</title>
  <style type="text/css">
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font:small sans-serif; background-color:#fff; color:#000; }
    body>div { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; }
    h2 { margin-bottom:.8em; }
    h3 { margin:1em 0 .5em 0; }
    h4 { margin:0 0 .5em 0; font-weight: normal; }
    code, pre { font-size: 100%; white-space: pre-wrap; word-break: break-word; }
    summary { cursor: pointer; }
    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }
    tbody td, tbody th { vertical-align:top; padding:2px 3px; }
    thead th {
      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;
      font-weight:normal; font-size:11px; border:1px solid #ddd;
    }
    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }
    table.vars { margin:5px 10px 2px 40px; width: auto; }
    table.vars td, table.req td { font-family:monospace; }
    table td.code { width:100%; }
    table td.code pre { overflow:hidden; }
    table.source th { color:#666; }
    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }
    ul.traceback { list-style-type:none; color: #222; }
    ul.traceback li.cause { word-break: break-word; }
    ul.traceback li.frame { padding-bottom:1em; color:#4f4f4f; }
    ul.traceback li.user { background-color:#e0e0e0; color:#000 }
    div.context { padding:10px 0; overflow:hidden; }
    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }
    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }
    div.context ol li pre { display:inline; }
    div.context ol.context-line li { color:#464646; background-color:#dfdfdf; padding: 3px 2px; }
    div.context ol.context-line li span { position:absolute; right:32px; }
    .user div.context ol.context-line li { background-color:#bbb; color:#000; }
    .user div.context ol li { color:#666; }
    div.commands, summary.commands { margin-left: 40px; }
    div.commands a, summary.commands { color:#555; text-decoration:none; }
    .user div.commands a { color: black; }
    #summary { background: #ffc; }
    #summary h2 { font-weight: normal; color: #666; }
    #explanation { background:#eee; }
    #template, #template-not-exist { background:#f6f6f6; }
    #template-not-exist ul { margin: 0 0 10px 20px; }
    #template-not-exist .postmortem-section { margin-bottom: 3px; }
    #unicode-hint { background:#eee; }
    #traceback { background:#eee; }
    #requestinfo { background:#f6f6f6; padding-left:120px; }
    #summary table { border:none; background:transparent; }
    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }
    #requestinfo h3 { margin-bottom:-1em; }
    .error { background: #ffc; }
    .specific { color:#cc3300; font-weight:bold; }
    h2 span.commands { font-size:.7em; font-weight:normal; }
    span.commands a:link {color:#5E5694;}
    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }
    .append-bottom { margin-bottom: 10px; }
    .fname { user-select: all; }
  </style>
  
  <script>
    function hideAll(elems) {
      for (var e = 0; e < elems.length; e++) {
        elems[e].style.display = 'none';
      }
    }
    window.onload = function() {
      hideAll(document.querySelectorAll('ol.pre-context'));
      hideAll(document.querySelectorAll('ol.post-context'));
      hideAll(document.querySelectorAll('div.pastebin'));
    }
    function toggle() {
      for (var i = 0; i < arguments.length; i++) {
        var e = document.getElementById(arguments[i]);
        if (e) {
          e.style.display = e.style.display == 'none' ? 'block': 'none';
        }
      }
      return false;
    }
    function switchPastebinFriendly(link) {
      s1 = "Switch to copy-and-paste view";
      s2 = "Switch back to interactive view";
      link.textContent = link.textContent.trim() == s1 ? s2: s1;
      toggle('browserTraceback', 'pastebinTraceback');
      return false;
    }
  </script>
  
</head>
<body>
<div id="summary">
  <h1>ValidationError
       at /v1/llm/</h1>
  <pre class="exception_value">[&#x27;&quot;user123&quot;은 유효하지 않은 UUID입니다.&#x27;]</pre>
  <table class="meta">

    <tr>
      <th>Request Method:</th>
      <td>POST</td>
    </tr>
    <tr>
      <th>Request URL:</th>
      <td>http://localhost:8000/v1/llm/</td>
    </tr>

    <tr>
      <th>Django Version:</th>
      <td>4.2</td>
    </tr>

    <tr>
      <th>Exception Type:</th>
      <td>ValidationError</td>
    </tr>


    <tr>
      <th>Exception Value:</th>
      <td><pre>[&#x27;&quot;user123&quot;은 유효하지 않은 UUID입니다.&#x27;]</pre></td>
    </tr>


    <tr>
      <th>Exception Location:</th>
      <td><span class="fname">/Users/yoobmooyeol/project/Florence_project/.venv/lib/python3.11/site-packages/django/db/models/fields/__init__.py</span>, line 2692, in to_python</td>
    </tr>


    <tr>
      <th>Raised during:</th>
      <td>llm.views.LLMQueryView</td>
    </tr>

    <tr>
      <th>Python Executable:</th>
      <td>/Users/yoobmooyeol/project/Florence_project/.venv/bin/python</td>
    </tr>
    <tr>
      <th>Python Version:</th>
      <td>3.11.9</td>
    </tr>
    <tr>
      <th>Python Path:</th>
      <td><pre>[&#x27;/Users/yoobmooyeol/project/Florence_project&#x27;,
 &#x27;/Users/yoobmooyeol/.pyenv/versions/3.11.9/lib/python311.zip&#x27;,
 &#x27;/Users/yoobmooyeol/.pyenv/versions/3.11.9/lib/python3.11&#x27;,
 &#x27;/Users/yoobmooyeol/.pyenv/versions/3.11.9/lib/python3.11/lib-dynload&#x27;,
 &#x27;/Users/yoobmooyeol/project/Florence_project/.venv/lib/python3.11/site-packages&#x27;]</pre></td>
    </tr>
    <tr>
      <th>Server time:</th>
      <td>Thu, 06 Mar 2025 14:40:03 +0900</td>
    </tr>
  </table>
</div>




<div id="traceback">
  <h2>Traceback <span class="commands"><a href="#" onclick="return switchPastebinFriendly(this);">
    Switch to copy-and-paste view</a></span>
  </h2>
  <div id="browserTraceback">
    <ul class="traceback">
      
        
        <li class="frame django">
          
            <code class="fname">/Users/yoobmooyeol/project/Florence_project/.venv/lib/python3.11/site-packages/django/db/models/fields/__init__.py</code>, line 2690, in to_python
          

          
            <div class="context" id="c4796088640">
              
                <ol start="2683" class="pre-context" id="pre4796088640">
                
                  <li onclick="toggle('pre4796088640', 'post4796088640')"><pre>            return value</pre></li>
                
                  <li onclick="toggle('pre4796088640', 'post4796088640')"><pre>        return value.hex</pre></li>
                
                  <li onclick="toggle('pre4796088640', 'post4796088640')"><pre></pre></li>
                
                  <li onclick="toggle('pre4796088640', 'post4796088640')"><pre>    def to_python(self, value):</pre></li>
                
                  <li onclick="toggle('pre4796088640', 'post4796088640')"><pre>        if value is not None and not isinstance(value, uuid.UUID):</pre></li>
                
                  <li onclick="toggle('pre4796088640', 'post4796088640')"><pre>            input_form = &quot;int&quot; if isinstance(value, int) else &quot;hex&quot;</pre></li>
                
                  <li onclick="toggle('pre4796088640', 'post4796088640')"><pre>            try:</pre></li>
                
                </ol>
              
              <ol start="2690" class="context-line">
                <li onclick="toggle('pre4796088640', 'post4796088640')"><pre>                return uuid.UUID(**{input_form: value})
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='2691' class="post-context" id="post4796088640">
                  
                  <li onclick="toggle('pre4796088640', 'post4796088640')"><pre>            except (AttributeError, ValueError):</pre></li>
                  
                  <li onclick="toggle('pre4796088640', 'post4796088640')"><pre>                raise exceptions.ValidationError(</pre></li>
                  
                  <li onclick="toggle('pre4796088640', 'post4796088640')"><pre>                    self.error_messages[&quot;invalid&quot;],</pre></li>
                  
                  <li onclick="toggle('pre4796088640', 'post4796088640')"><pre>                    code=&quot;invalid&quot;,</pre></li>
                  
                  <li onclick="toggle('pre4796088640', 'post4796088640')"><pre>                    params={&quot;value&quot;: value},</pre></li>
                  
                  <li onclick="toggle('pre4796088640', 'post4796088640')"><pre>                )</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v4796088640">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>input_form</td>
                    <td class="code"><pre>&#x27;hex&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.models.fields.UUIDField: user_id&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>value</td>
                    <td class="code"><pre>&#x27;user123&#x27;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/Users/yoobmooyeol/.pyenv/versions/3.11.9/lib/python3.11/uuid.py</code>, line 178, in __init__
          

          
            <div class="context" id="c4796101568">
              
                <ol start="171" class="pre-context" id="pre4796101568">
                
                  <li onclick="toggle('pre4796101568', 'post4796101568')"><pre>        if [hex, bytes, bytes_le, fields, int].count(None) != 4:</pre></li>
                
                  <li onclick="toggle('pre4796101568', 'post4796101568')"><pre>            raise TypeError(&#x27;one of the hex, bytes, bytes_le, fields, &#x27;</pre></li>
                
                  <li onclick="toggle('pre4796101568', 'post4796101568')"><pre>                            &#x27;or int arguments must be given&#x27;)</pre></li>
                
                  <li onclick="toggle('pre4796101568', 'post4796101568')"><pre>        if hex is not None:</pre></li>
                
                  <li onclick="toggle('pre4796101568', 'post4796101568')"><pre>            hex = hex.replace(&#x27;urn:&#x27;, &#x27;&#x27;).replace(&#x27;uuid:&#x27;, &#x27;&#x27;)</pre></li>
                
                  <li onclick="toggle('pre4796101568', 'post4796101568')"><pre>            hex = hex.strip(&#x27;{}&#x27;).replace(&#x27;-&#x27;, &#x27;&#x27;)</pre></li>
                
                  <li onclick="toggle('pre4796101568', 'post4796101568')"><pre>            if len(hex) != 32:</pre></li>
                
                </ol>
              
              <ol start="178" class="context-line">
                <li onclick="toggle('pre4796101568', 'post4796101568')"><pre>                raise ValueError(&#x27;badly formed hexadecimal UUID string&#x27;)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='179' class="post-context" id="post4796101568">
                  
                  <li onclick="toggle('pre4796101568', 'post4796101568')"><pre>            int = int_(hex, 16)</pre></li>
                  
                  <li onclick="toggle('pre4796101568', 'post4796101568')"><pre>        if bytes_le is not None:</pre></li>
                  
                  <li onclick="toggle('pre4796101568', 'post4796101568')"><pre>            if len(bytes_le) != 16:</pre></li>
                  
                  <li onclick="toggle('pre4796101568', 'post4796101568')"><pre>                raise ValueError(&#x27;bytes_le is not a 16-char string&#x27;)</pre></li>
                  
                  <li onclick="toggle('pre4796101568', 'post4796101568')"><pre>            bytes = (bytes_le[4-1::-1] + bytes_le[6-1:4-1:-1] +</pre></li>
                  
                  <li onclick="toggle('pre4796101568', 'post4796101568')"><pre>                     bytes_le[8-1:6-1:-1] + bytes_le[8:])</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v4796101568">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>bytes</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>bytes_le</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>fields</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>hex</td>
                    <td class="code"><pre>&#x27;user123&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>int</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>is_safe</td>
                    <td class="code"><pre>&lt;SafeUUID.unknown: None&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>Error in formatting: AttributeError: &#x27;UUID&#x27; object has no attribute &#x27;int&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>version</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
          <li class="cause"><h3>
          
            During handling of the above exception (badly formed hexadecimal UUID string), another exception occurred:
          
        </h3></li>
        
        <li class="frame django">
          
            <code class="fname">/Users/yoobmooyeol/project/Florence_project/.venv/lib/python3.11/site-packages/django/core/handlers/exception.py</code>, line 55, in inner
          

          
            <div class="context" id="c4796093952">
              
                <ol start="48" class="pre-context" id="pre4796093952">
                
                  <li onclick="toggle('pre4796093952', 'post4796093952')"><pre></pre></li>
                
                  <li onclick="toggle('pre4796093952', 'post4796093952')"><pre>        return inner</pre></li>
                
                  <li onclick="toggle('pre4796093952', 'post4796093952')"><pre>    else:</pre></li>
                
                  <li onclick="toggle('pre4796093952', 'post4796093952')"><pre></pre></li>
                
                  <li onclick="toggle('pre4796093952', 'post4796093952')"><pre>        @wraps(get_response)</pre></li>
                
                  <li onclick="toggle('pre4796093952', 'post4796093952')"><pre>        def inner(request):</pre></li>
                
                  <li onclick="toggle('pre4796093952', 'post4796093952')"><pre>            try:</pre></li>
                
                </ol>
              
              <ol start="55" class="context-line">
                <li onclick="toggle('pre4796093952', 'post4796093952')"><pre>                response = get_response(request)
                               ^^^^^^^^^^^^^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='56' class="post-context" id="post4796093952">
                  
                  <li onclick="toggle('pre4796093952', 'post4796093952')"><pre>            except Exception as exc:</pre></li>
                  
                  <li onclick="toggle('pre4796093952', 'post4796093952')"><pre>                response = response_for_exception(request, exc)</pre></li>
                  
                  <li onclick="toggle('pre4796093952', 'post4796093952')"><pre>            return response</pre></li>
                  
                  <li onclick="toggle('pre4796093952', 'post4796093952')"><pre></pre></li>
                  
                  <li onclick="toggle('pre4796093952', 'post4796093952')"><pre>        return inner</pre></li>
                  
                  <li onclick="toggle('pre4796093952', 'post4796093952')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v4796093952">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>exc</td>
                    <td class="code"><pre>ValidationError([&#x27;&quot;user123&quot;은 유효하지 않은 UUID입니다.&#x27;])</pre></td>
                  </tr>
                
                  <tr>
                    <td>get_response</td>
                    <td class="code"><pre>&lt;bound method BaseHandler._get_response of &lt;django.core.handlers.wsgi.WSGIHandler object at 0x11da54390&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/v1/llm/&#x27;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/Users/yoobmooyeol/project/Florence_project/.venv/lib/python3.11/site-packages/django/core/handlers/base.py</code>, line 197, in _get_response
          

          
            <div class="context" id="c4796097600">
              
                <ol start="190" class="pre-context" id="pre4796097600">
                
                  <li onclick="toggle('pre4796097600', 'post4796097600')"><pre></pre></li>
                
                  <li onclick="toggle('pre4796097600', 'post4796097600')"><pre>        if response is None:</pre></li>
                
                  <li onclick="toggle('pre4796097600', 'post4796097600')"><pre>            wrapped_callback = self.make_view_atomic(callback)</pre></li>
                
                  <li onclick="toggle('pre4796097600', 'post4796097600')"><pre>            # If it is an asynchronous view, run it in a subthread.</pre></li>
                
                  <li onclick="toggle('pre4796097600', 'post4796097600')"><pre>            if iscoroutinefunction(wrapped_callback):</pre></li>
                
                  <li onclick="toggle('pre4796097600', 'post4796097600')"><pre>                wrapped_callback = async_to_sync(wrapped_callback)</pre></li>
                
                  <li onclick="toggle('pre4796097600', 'post4796097600')"><pre>            try:</pre></li>
                
                </ol>
              
              <ol start="197" class="context-line">
                <li onclick="toggle('pre4796097600', 'post4796097600')"><pre>                response = wrapped_callback(request, *callback_args, **callback_kwargs)
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='198' class="post-context" id="post4796097600">
                  
                  <li onclick="toggle('pre4796097600', 'post4796097600')"><pre>            except Exception as e:</pre></li>
                  
                  <li onclick="toggle('pre4796097600', 'post4796097600')"><pre>                response = self.process_exception_by_middleware(e, request)</pre></li>
                  
                  <li onclick="toggle('pre4796097600', 'post4796097600')"><pre>                if response is None:</pre></li>
                  
                  <li onclick="toggle('pre4796097600', 'post4796097600')"><pre>                    raise</pre></li>
                  
                  <li onclick="toggle('pre4796097600', 'post4796097600')"><pre></pre></li>
                  
                  <li onclick="toggle('pre4796097600', 'post4796097600')"><pre>        # Complain if the view returned None (a common error).</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v4796097600">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>callback</td>
                    <td class="code"><pre>&lt;function View.as_view.&lt;locals&gt;.view at 0x11c644540&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>middleware_method</td>
                    <td class="code"><pre>&lt;bound method CsrfViewMiddleware.process_view of &lt;CsrfViewMiddleware get_response=convert_exception_to_response.&lt;locals&gt;.inner&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/v1/llm/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.core.handlers.wsgi.WSGIHandler object at 0x11da54390&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>wrapped_callback</td>
                    <td class="code"><pre>&lt;function View.as_view.&lt;locals&gt;.view at 0x11c644540&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/Users/yoobmooyeol/project/Florence_project/.venv/lib/python3.11/site-packages/django/views/decorators/csrf.py</code>, line 56, in wrapper_view
          

          
            <div class="context" id="c4796090752">
              
                <ol start="49" class="pre-context" id="pre4796090752">
                
                  <li onclick="toggle('pre4796090752', 'post4796090752')"><pre>def csrf_exempt(view_func):</pre></li>
                
                  <li onclick="toggle('pre4796090752', 'post4796090752')"><pre>    &quot;&quot;&quot;Mark a view function as being exempt from the CSRF view protection.&quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre4796090752', 'post4796090752')"><pre></pre></li>
                
                  <li onclick="toggle('pre4796090752', 'post4796090752')"><pre>    # view_func.csrf_exempt = True would also work, but decorators are nicer</pre></li>
                
                  <li onclick="toggle('pre4796090752', 'post4796090752')"><pre>    # if they don&#x27;t have side effects, so return a new function.</pre></li>
                
                  <li onclick="toggle('pre4796090752', 'post4796090752')"><pre>    @wraps(view_func)</pre></li>
                
                  <li onclick="toggle('pre4796090752', 'post4796090752')"><pre>    def wrapper_view(*args, **kwargs):</pre></li>
                
                </ol>
              
              <ol start="56" class="context-line">
                <li onclick="toggle('pre4796090752', 'post4796090752')"><pre>        return view_func(*args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='57' class="post-context" id="post4796090752">
                  
                  <li onclick="toggle('pre4796090752', 'post4796090752')"><pre></pre></li>
                  
                  <li onclick="toggle('pre4796090752', 'post4796090752')"><pre>    wrapper_view.csrf_exempt = True</pre></li>
                  
                  <li onclick="toggle('pre4796090752', 'post4796090752')"><pre>    return wrapper_view</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v4796090752">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>(&lt;WSGIRequest: POST &#x27;/v1/llm/&#x27;&gt;,)</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>view_func</td>
                    <td class="code"><pre>&lt;function View.as_view.&lt;locals&gt;.view at 0x11c6444a0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/Users/yoobmooyeol/project/Florence_project/.venv/lib/python3.11/site-packages/django/views/generic/base.py</code>, line 104, in view
          

          
            <div class="context" id="c4796102464">
              
                <ol start="97" class="pre-context" id="pre4796102464">
                
                  <li onclick="toggle('pre4796102464', 'post4796102464')"><pre>            self = cls(**initkwargs)</pre></li>
                
                  <li onclick="toggle('pre4796102464', 'post4796102464')"><pre>            self.setup(request, *args, **kwargs)</pre></li>
                
                  <li onclick="toggle('pre4796102464', 'post4796102464')"><pre>            if not hasattr(self, &quot;request&quot;):</pre></li>
                
                  <li onclick="toggle('pre4796102464', 'post4796102464')"><pre>                raise AttributeError(</pre></li>
                
                  <li onclick="toggle('pre4796102464', 'post4796102464')"><pre>                    &quot;%s instance has no &#x27;request&#x27; attribute. Did you override &quot;</pre></li>
                
                  <li onclick="toggle('pre4796102464', 'post4796102464')"><pre>                    &quot;setup() and forget to call super()?&quot; % cls.__name__</pre></li>
                
                  <li onclick="toggle('pre4796102464', 'post4796102464')"><pre>                )</pre></li>
                
                </ol>
              
              <ol start="104" class="context-line">
                <li onclick="toggle('pre4796102464', 'post4796102464')"><pre>            return self.dispatch(request, *args, **kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='105' class="post-context" id="post4796102464">
                  
                  <li onclick="toggle('pre4796102464', 'post4796102464')"><pre></pre></li>
                  
                  <li onclick="toggle('pre4796102464', 'post4796102464')"><pre>        view.view_class = cls</pre></li>
                  
                  <li onclick="toggle('pre4796102464', 'post4796102464')"><pre>        view.view_initkwargs = initkwargs</pre></li>
                  
                  <li onclick="toggle('pre4796102464', 'post4796102464')"><pre></pre></li>
                  
                  <li onclick="toggle('pre4796102464', 'post4796102464')"><pre>        # __name__ and __qualname__ are intentionally left unchanged as</pre></li>
                  
                  <li onclick="toggle('pre4796102464', 'post4796102464')"><pre>        # view_class should be used to robustly determine the name of the view</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v4796102464">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>cls</td>
                    <td class="code"><pre>&lt;class &#x27;llm.views.LLMQueryView&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>initkwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/v1/llm/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;llm.views.LLMQueryView object at 0x11ddeaa10&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/Users/yoobmooyeol/project/Florence_project/.venv/lib/python3.11/site-packages/rest_framework/views.py</code>, line 509, in dispatch
          

          
            <div class="context" id="c4796101184">
              
                <ol start="502" class="pre-context" id="pre4796101184">
                
                  <li onclick="toggle('pre4796101184', 'post4796101184')"><pre>                                  self.http_method_not_allowed)</pre></li>
                
                  <li onclick="toggle('pre4796101184', 'post4796101184')"><pre>            else:</pre></li>
                
                  <li onclick="toggle('pre4796101184', 'post4796101184')"><pre>                handler = self.http_method_not_allowed</pre></li>
                
                  <li onclick="toggle('pre4796101184', 'post4796101184')"><pre></pre></li>
                
                  <li onclick="toggle('pre4796101184', 'post4796101184')"><pre>            response = handler(request, *args, **kwargs)</pre></li>
                
                  <li onclick="toggle('pre4796101184', 'post4796101184')"><pre></pre></li>
                
                  <li onclick="toggle('pre4796101184', 'post4796101184')"><pre>        except Exception as exc:</pre></li>
                
                </ol>
              
              <ol start="509" class="context-line">
                <li onclick="toggle('pre4796101184', 'post4796101184')"><pre>            response = self.handle_exception(exc)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='510' class="post-context" id="post4796101184">
                  
                  <li onclick="toggle('pre4796101184', 'post4796101184')"><pre></pre></li>
                  
                  <li onclick="toggle('pre4796101184', 'post4796101184')"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>
                  
                  <li onclick="toggle('pre4796101184', 'post4796101184')"><pre>        return self.response</pre></li>
                  
                  <li onclick="toggle('pre4796101184', 'post4796101184')"><pre></pre></li>
                  
                  <li onclick="toggle('pre4796101184', 'post4796101184')"><pre>    def options(self, request, *args, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre4796101184', 'post4796101184')"><pre>        &quot;&quot;&quot;</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v4796101184">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>handler</td>
                    <td class="code"><pre>&lt;bound method LLMQueryView.post of &lt;llm.views.LLMQueryView object at 0x11ddeaa10&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/v1/llm/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;llm.views.LLMQueryView object at 0x11ddeaa10&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/Users/yoobmooyeol/project/Florence_project/.venv/lib/python3.11/site-packages/rest_framework/views.py</code>, line 469, in handle_exception
          

          
            <div class="context" id="c4796100096">
              
                <ol start="462" class="pre-context" id="pre4796100096">
                
                  <li onclick="toggle('pre4796100096', 'post4796100096')"><pre></pre></li>
                
                  <li onclick="toggle('pre4796100096', 'post4796100096')"><pre>        exception_handler = self.get_exception_handler()</pre></li>
                
                  <li onclick="toggle('pre4796100096', 'post4796100096')"><pre></pre></li>
                
                  <li onclick="toggle('pre4796100096', 'post4796100096')"><pre>        context = self.get_exception_handler_context()</pre></li>
                
                  <li onclick="toggle('pre4796100096', 'post4796100096')"><pre>        response = exception_handler(exc, context)</pre></li>
                
                  <li onclick="toggle('pre4796100096', 'post4796100096')"><pre></pre></li>
                
                  <li onclick="toggle('pre4796100096', 'post4796100096')"><pre>        if response is None:</pre></li>
                
                </ol>
              
              <ol start="469" class="context-line">
                <li onclick="toggle('pre4796100096', 'post4796100096')"><pre>            self.raise_uncaught_exception(exc)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='470' class="post-context" id="post4796100096">
                  
                  <li onclick="toggle('pre4796100096', 'post4796100096')"><pre></pre></li>
                  
                  <li onclick="toggle('pre4796100096', 'post4796100096')"><pre>        response.exception = True</pre></li>
                  
                  <li onclick="toggle('pre4796100096', 'post4796100096')"><pre>        return response</pre></li>
                  
                  <li onclick="toggle('pre4796100096', 'post4796100096')"><pre></pre></li>
                  
                  <li onclick="toggle('pre4796100096', 'post4796100096')"><pre>    def raise_uncaught_exception(self, exc):</pre></li>
                  
                  <li onclick="toggle('pre4796100096', 'post4796100096')"><pre>        if settings.DEBUG:</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v4796100096">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>context</td>
                    <td class="code"><pre>{&#x27;args&#x27;: (),
 &#x27;kwargs&#x27;: {},
 &#x27;request&#x27;: &lt;rest_framework.request.Request: POST &#x27;/v1/llm/&#x27;&gt;,
 &#x27;view&#x27;: &lt;llm.views.LLMQueryView object at 0x11ddeaa10&gt;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>exc</td>
                    <td class="code"><pre>ValidationError([&#x27;&quot;user123&quot;은 유효하지 않은 UUID입니다.&#x27;])</pre></td>
                  </tr>
                
                  <tr>
                    <td>exception_handler</td>
                    <td class="code"><pre>&lt;function custom_exception_handler at 0x11dd7de40&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;llm.views.LLMQueryView object at 0x11ddeaa10&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/Users/yoobmooyeol/project/Florence_project/.venv/lib/python3.11/site-packages/rest_framework/views.py</code>, line 480, in raise_uncaught_exception
          

          
            <div class="context" id="c4796102208">
              
                <ol start="473" class="pre-context" id="pre4796102208">
                
                  <li onclick="toggle('pre4796102208', 'post4796102208')"><pre></pre></li>
                
                  <li onclick="toggle('pre4796102208', 'post4796102208')"><pre>    def raise_uncaught_exception(self, exc):</pre></li>
                
                  <li onclick="toggle('pre4796102208', 'post4796102208')"><pre>        if settings.DEBUG:</pre></li>
                
                  <li onclick="toggle('pre4796102208', 'post4796102208')"><pre>            request = self.request</pre></li>
                
                  <li onclick="toggle('pre4796102208', 'post4796102208')"><pre>            renderer_format = getattr(request.accepted_renderer, &#x27;format&#x27;)</pre></li>
                
                  <li onclick="toggle('pre4796102208', 'post4796102208')"><pre>            use_plaintext_traceback = renderer_format not in (&#x27;html&#x27;, &#x27;api&#x27;, &#x27;admin&#x27;)</pre></li>
                
                  <li onclick="toggle('pre4796102208', 'post4796102208')"><pre>            request.force_plaintext_errors(use_plaintext_traceback)</pre></li>
                
                </ol>
              
              <ol start="480" class="context-line">
                <li onclick="toggle('pre4796102208', 'post4796102208')"><pre>        raise exc
             ^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='481' class="post-context" id="post4796102208">
                  
                  <li onclick="toggle('pre4796102208', 'post4796102208')"><pre></pre></li>
                  
                  <li onclick="toggle('pre4796102208', 'post4796102208')"><pre>    # Note: Views are made CSRF exempt from within `as_view` as to prevent</pre></li>
                  
                  <li onclick="toggle('pre4796102208', 'post4796102208')"><pre>    # accidental removal of this exemption in cases where `dispatch` needs to</pre></li>
                  
                  <li onclick="toggle('pre4796102208', 'post4796102208')"><pre>    # be overridden.</pre></li>
                  
                  <li onclick="toggle('pre4796102208', 'post4796102208')"><pre>    def dispatch(self, request, *args, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre4796102208', 'post4796102208')"><pre>        &quot;&quot;&quot;</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v4796102208">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>exc</td>
                    <td class="code"><pre>ValidationError([&#x27;&quot;user123&quot;은 유효하지 않은 UUID입니다.&#x27;])</pre></td>
                  </tr>
                
                  <tr>
                    <td>renderer_format</td>
                    <td class="code"><pre>&#x27;json&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/v1/llm/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;llm.views.LLMQueryView object at 0x11ddeaa10&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>use_plaintext_traceback</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/Users/yoobmooyeol/project/Florence_project/.venv/lib/python3.11/site-packages/rest_framework/views.py</code>, line 506, in dispatch
          

          
            <div class="context" id="c4796100608">
              
                <ol start="499" class="pre-context" id="pre4796100608">
                
                  <li onclick="toggle('pre4796100608', 'post4796100608')"><pre>            # Get the appropriate handler method</pre></li>
                
                  <li onclick="toggle('pre4796100608', 'post4796100608')"><pre>            if request.method.lower() in self.http_method_names:</pre></li>
                
                  <li onclick="toggle('pre4796100608', 'post4796100608')"><pre>                handler = getattr(self, request.method.lower(),</pre></li>
                
                  <li onclick="toggle('pre4796100608', 'post4796100608')"><pre>                                  self.http_method_not_allowed)</pre></li>
                
                  <li onclick="toggle('pre4796100608', 'post4796100608')"><pre>            else:</pre></li>
                
                  <li onclick="toggle('pre4796100608', 'post4796100608')"><pre>                handler = self.http_method_not_allowed</pre></li>
                
                  <li onclick="toggle('pre4796100608', 'post4796100608')"><pre></pre></li>
                
                </ol>
              
              <ol start="506" class="context-line">
                <li onclick="toggle('pre4796100608', 'post4796100608')"><pre>            response = handler(request, *args, **kwargs)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='507' class="post-context" id="post4796100608">
                  
                  <li onclick="toggle('pre4796100608', 'post4796100608')"><pre></pre></li>
                  
                  <li onclick="toggle('pre4796100608', 'post4796100608')"><pre>        except Exception as exc:</pre></li>
                  
                  <li onclick="toggle('pre4796100608', 'post4796100608')"><pre>            response = self.handle_exception(exc)</pre></li>
                  
                  <li onclick="toggle('pre4796100608', 'post4796100608')"><pre></pre></li>
                  
                  <li onclick="toggle('pre4796100608', 'post4796100608')"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>
                  
                  <li onclick="toggle('pre4796100608', 'post4796100608')"><pre>        return self.response</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v4796100608">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>handler</td>
                    <td class="code"><pre>&lt;bound method LLMQueryView.post of &lt;llm.views.LLMQueryView object at 0x11ddeaa10&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/v1/llm/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;llm.views.LLMQueryView object at 0x11ddeaa10&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/Users/yoobmooyeol/project/Florence_project/llm/views.py</code>, line 61, in post
          

          
            <div class="context" id="c4796088448">
              
                <ol start="54" class="pre-context" id="pre4796088448">
                
                  <li onclick="toggle('pre4796088448', 'post4796088448')"><pre>        else:</pre></li>
                
                  <li onclick="toggle('pre4796088448', 'post4796088448')"><pre>            # POST 요청이므로 data에서 user_id 가져오기</pre></li>
                
                  <li onclick="toggle('pre4796088448', 'post4796088448')"><pre>            user_id = request.data.get(&#x27;user_id&#x27;)</pre></li>
                
                  <li onclick="toggle('pre4796088448', 'post4796088448')"><pre>            if not user_id:</pre></li>
                
                  <li onclick="toggle('pre4796088448', 'post4796088448')"><pre>                return Response({&quot;error&quot;: &quot;사용자 ID가 필요합니다.&quot;}, status=status.HTTP_400_BAD_REQUEST)</pre></li>
                
                  <li onclick="toggle('pre4796088448', 'post4796088448')"><pre>                </pre></li>
                
                  <li onclick="toggle('pre4796088448', 'post4796088448')"><pre>            try:</pre></li>
                
                </ol>
              
              <ol start="61" class="context-line">
                <li onclick="toggle('pre4796088448', 'post4796088448')"><pre>                user = custom_get_object_or_404(User, user_id=user_id)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='62' class="post-context" id="post4796088448">
                  
                  <li onclick="toggle('pre4796088448', 'post4796088448')"><pre>            except Http404 as e:</pre></li>
                  
                  <li onclick="toggle('pre4796088448', 'post4796088448')"><pre>                logger.error(f&quot;사용자 조회 중 오류: {str(e)}&quot;)</pre></li>
                  
                  <li onclick="toggle('pre4796088448', 'post4796088448')"><pre>                return Response({&quot;error&quot;: str(e)}, status=status.HTTP_404_NOT_FOUND)</pre></li>
                  
                  <li onclick="toggle('pre4796088448', 'post4796088448')"><pre>        </pre></li>
                  
                  <li onclick="toggle('pre4796088448', 'post4796088448')"><pre>        # 요청 데이터 추출</pre></li>
                  
                  <li onclick="toggle('pre4796088448', 'post4796088448')"><pre>        query_text = serializer.validated_data[&#x27;query_text&#x27;]</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v4796088448">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/v1/llm/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;llm.views.LLMQueryView object at 0x11ddeaa10&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>serializer</td>
                    <td class="code"><pre>QuerySerializer(context={&#x27;request&#x27;: &lt;rest_framework.request.Request: POST &#x27;/v1/llm/&#x27;&gt;, &#x27;format&#x27;: None, &#x27;view&#x27;: &lt;llm.views.LLMQueryView object&gt;}, data={&#x27;query_text&#x27;: &#x27;임신 8주차에 먹어야할 음식은 뭐가 있을까요?&#x27;, &#x27;user_id&#x27;: &#x27;user123&#x27;, &#x27;pregnancy_week&#x27;: 8}):
    user_id = CharField(required=True)
    query_text = CharField(required=True)
    preferences = JSONField(default=&lt;class &#x27;dict&#x27;&gt;, required=False)
    pregnancy_week = IntegerField(allow_null=True, required=False)</pre></td>
                  </tr>
                
                  <tr>
                    <td>user_id</td>
                    <td class="code"><pre>&#x27;user123&#x27;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">/Users/yoobmooyeol/project/Florence_project/llm/views.py</code>, line 30, in custom_get_object_or_404
          

          
            <div class="context" id="c4771549696">
              
                <ol start="23" class="pre-context" id="pre4771549696">
                
                  <li onclick="toggle('pre4771549696', 'post4771549696')"><pre></pre></li>
                
                  <li onclick="toggle('pre4771549696', 'post4771549696')"><pre># 커스텀 get_object_or_404 함수</pre></li>
                
                  <li onclick="toggle('pre4771549696', 'post4771549696')"><pre>def custom_get_object_or_404(klass, *args, **kwargs):</pre></li>
                
                  <li onclick="toggle('pre4771549696', 'post4771549696')"><pre>    &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre4771549696', 'post4771549696')"><pre>    한글 오류 메시지를 반환하는 get_object_or_404 함수</pre></li>
                
                  <li onclick="toggle('pre4771549696', 'post4771549696')"><pre>    &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre4771549696', 'post4771549696')"><pre>    try:</pre></li>
                
                </ol>
              
              <ol start="30" class="context-line">
                <li onclick="toggle('pre4771549696', 'post4771549696')"><pre>        return klass.objects.get(*args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='31' class="post-context" id="post4771549696">
                  
                  <li onclick="toggle('pre4771549696', 'post4771549696')"><pre>    except klass.DoesNotExist:</pre></li>
                  
                  <li onclick="toggle('pre4771549696', 'post4771549696')"><pre>        if klass == User:</pre></li>
                  
                  <li onclick="toggle('pre4771549696', 'post4771549696')"><pre>            raise Http404(&quot;사용자를 찾을 수 없습니다.&quot;)</pre></li>
                  
                  <li onclick="toggle('pre4771549696', 'post4771549696')"><pre>        elif klass == LLMConversation:</pre></li>
                  
                  <li onclick="toggle('pre4771549696', 'post4771549696')"><pre>            raise Http404(&quot;대화를 찾을 수 없습니다.&quot;)</pre></li>
                  
                  <li onclick="toggle('pre4771549696', 'post4771549696')"><pre>        else:</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v4771549696">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>klass</td>
                    <td class="code"><pre>&lt;class &#x27;accounts.models.User&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#x27;user_id&#x27;: &#x27;user123&#x27;}</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/Users/yoobmooyeol/project/Florence_project/.venv/lib/python3.11/site-packages/django/db/models/manager.py</code>, line 87, in manager_method
          

          
            <div class="context" id="c4796103872">
              
                <ol start="80" class="pre-context" id="pre4796103872">
                
                  <li onclick="toggle('pre4796103872', 'post4796103872')"><pre>        return []</pre></li>
                
                  <li onclick="toggle('pre4796103872', 'post4796103872')"><pre></pre></li>
                
                  <li onclick="toggle('pre4796103872', 'post4796103872')"><pre>    @classmethod</pre></li>
                
                  <li onclick="toggle('pre4796103872', 'post4796103872')"><pre>    def _get_queryset_methods(cls, queryset_class):</pre></li>
                
                  <li onclick="toggle('pre4796103872', 'post4796103872')"><pre>        def create_method(name, method):</pre></li>
                
                  <li onclick="toggle('pre4796103872', 'post4796103872')"><pre>            @wraps(method)</pre></li>
                
                  <li onclick="toggle('pre4796103872', 'post4796103872')"><pre>            def manager_method(self, *args, **kwargs):</pre></li>
                
                </ol>
              
              <ol start="87" class="context-line">
                <li onclick="toggle('pre4796103872', 'post4796103872')"><pre>                return getattr(self.get_queryset(), name)(*args, **kwargs)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='88' class="post-context" id="post4796103872">
                  
                  <li onclick="toggle('pre4796103872', 'post4796103872')"><pre></pre></li>
                  
                  <li onclick="toggle('pre4796103872', 'post4796103872')"><pre>            return manager_method</pre></li>
                  
                  <li onclick="toggle('pre4796103872', 'post4796103872')"><pre></pre></li>
                  
                  <li onclick="toggle('pre4796103872', 'post4796103872')"><pre>        new_methods = {}</pre></li>
                  
                  <li onclick="toggle('pre4796103872', 'post4796103872')"><pre>        for name, method in inspect.getmembers(</pre></li>
                  
                  <li onclick="toggle('pre4796103872', 'post4796103872')"><pre>            queryset_class, predicate=inspect.isfunction</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v4796103872">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#x27;user_id&#x27;: &#x27;user123&#x27;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>name</td>
                    <td class="code"><pre>&#x27;get&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.contrib.auth.models.UserManager object at 0x103a69010&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/Users/yoobmooyeol/project/Florence_project/.venv/lib/python3.11/site-packages/django/db/models/query.py</code>, line 623, in get
          

          
            <div class="context" id="c4796099776">
              
                <ol start="616" class="pre-context" id="pre4796099776">
                
                  <li onclick="toggle('pre4796099776', 'post4796099776')"><pre>        keyword arguments.</pre></li>
                
                  <li onclick="toggle('pre4796099776', 'post4796099776')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre4796099776', 'post4796099776')"><pre>        if self.query.combinator and (args or kwargs):</pre></li>
                
                  <li onclick="toggle('pre4796099776', 'post4796099776')"><pre>            raise NotSupportedError(</pre></li>
                
                  <li onclick="toggle('pre4796099776', 'post4796099776')"><pre>                &quot;Calling QuerySet.get(...) with filters after %s() is not &quot;</pre></li>
                
                  <li onclick="toggle('pre4796099776', 'post4796099776')"><pre>                &quot;supported.&quot; % self.query.combinator</pre></li>
                
                  <li onclick="toggle('pre4796099776', 'post4796099776')"><pre>            )</pre></li>
                
                </ol>
              
              <ol start="623" class="context-line">
                <li onclick="toggle('pre4796099776', 'post4796099776')"><pre>        clone = self._chain() if self.query.combinator else self.filter(*args, **kwargs)
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='624' class="post-context" id="post4796099776">
                  
                  <li onclick="toggle('pre4796099776', 'post4796099776')"><pre>        if self.query.can_filter() and not self.query.distinct_fields:</pre></li>
                  
                  <li onclick="toggle('pre4796099776', 'post4796099776')"><pre>            clone = clone.order_by()</pre></li>
                  
                  <li onclick="toggle('pre4796099776', 'post4796099776')"><pre>        limit = None</pre></li>
                  
                  <li onclick="toggle('pre4796099776', 'post4796099776')"><pre>        if (</pre></li>
                  
                  <li onclick="toggle('pre4796099776', 'post4796099776')"><pre>            not clone.query.select_for_update</pre></li>
                  
                  <li onclick="toggle('pre4796099776', 'post4796099776')"><pre>            or connections[clone.db].features.supports_select_for_update_with_limit</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v4796099776">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#x27;user_id&#x27;: &#x27;user123&#x27;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;QuerySet [&lt;User: yoon&gt;, &lt;User: 윤무열&gt;, &lt;User: Test User&gt;, &lt;User: 두희&gt;]&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/Users/yoobmooyeol/project/Florence_project/.venv/lib/python3.11/site-packages/django/db/models/query.py</code>, line 1436, in filter
          

          
            <div class="context" id="c4796090880">
              
                <ol start="1429" class="pre-context" id="pre4796090880">
                
                  <li onclick="toggle('pre4796090880', 'post4796090880')"><pre></pre></li>
                
                  <li onclick="toggle('pre4796090880', 'post4796090880')"><pre>    def filter(self, *args, **kwargs):</pre></li>
                
                  <li onclick="toggle('pre4796090880', 'post4796090880')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre4796090880', 'post4796090880')"><pre>        Return a new QuerySet instance with the args ANDed to the existing</pre></li>
                
                  <li onclick="toggle('pre4796090880', 'post4796090880')"><pre>        set.</pre></li>
                
                  <li onclick="toggle('pre4796090880', 'post4796090880')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre4796090880', 'post4796090880')"><pre>        self._not_support_combined_queries(&quot;filter&quot;)</pre></li>
                
                </ol>
              
              <ol start="1436" class="context-line">
                <li onclick="toggle('pre4796090880', 'post4796090880')"><pre>        return self._filter_or_exclude(False, args, kwargs)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='1437' class="post-context" id="post4796090880">
                  
                  <li onclick="toggle('pre4796090880', 'post4796090880')"><pre></pre></li>
                  
                  <li onclick="toggle('pre4796090880', 'post4796090880')"><pre>    def exclude(self, *args, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre4796090880', 'post4796090880')"><pre>        &quot;&quot;&quot;</pre></li>
                  
                  <li onclick="toggle('pre4796090880', 'post4796090880')"><pre>        Return a new QuerySet instance with NOT (args) ANDed to the existing</pre></li>
                  
                  <li onclick="toggle('pre4796090880', 'post4796090880')"><pre>        set.</pre></li>
                  
                  <li onclick="toggle('pre4796090880', 'post4796090880')"><pre>        &quot;&quot;&quot;</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v4796090880">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#x27;user_id&#x27;: &#x27;user123&#x27;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;QuerySet [&lt;User: yoon&gt;, &lt;User: 윤무열&gt;, &lt;User: Test User&gt;, &lt;User: 두희&gt;]&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/Users/yoobmooyeol/project/Florence_project/.venv/lib/python3.11/site-packages/django/db/models/query.py</code>, line 1454, in _filter_or_exclude
          

          
            <div class="context" id="c4796102528">
              
                <ol start="1447" class="pre-context" id="pre4796102528">
                
                  <li onclick="toggle('pre4796102528', 'post4796102528')"><pre>        if (args or kwargs) and self.query.is_sliced:</pre></li>
                
                  <li onclick="toggle('pre4796102528', 'post4796102528')"><pre>            raise TypeError(&quot;Cannot filter a query once a slice has been taken.&quot;)</pre></li>
                
                  <li onclick="toggle('pre4796102528', 'post4796102528')"><pre>        clone = self._chain()</pre></li>
                
                  <li onclick="toggle('pre4796102528', 'post4796102528')"><pre>        if self._defer_next_filter:</pre></li>
                
                  <li onclick="toggle('pre4796102528', 'post4796102528')"><pre>            self._defer_next_filter = False</pre></li>
                
                  <li onclick="toggle('pre4796102528', 'post4796102528')"><pre>            clone._deferred_filter = negate, args, kwargs</pre></li>
                
                  <li onclick="toggle('pre4796102528', 'post4796102528')"><pre>        else:</pre></li>
                
                </ol>
              
              <ol start="1454" class="context-line">
                <li onclick="toggle('pre4796102528', 'post4796102528')"><pre>            clone._filter_or_exclude_inplace(negate, args, kwargs)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='1455' class="post-context" id="post4796102528">
                  
                  <li onclick="toggle('pre4796102528', 'post4796102528')"><pre>        return clone</pre></li>
                  
                  <li onclick="toggle('pre4796102528', 'post4796102528')"><pre></pre></li>
                  
                  <li onclick="toggle('pre4796102528', 'post4796102528')"><pre>    def _filter_or_exclude_inplace(self, negate, args, kwargs):</pre></li>
                  
                  <li onclick="toggle('pre4796102528', 'post4796102528')"><pre>        if negate:</pre></li>
                  
                  <li onclick="toggle('pre4796102528', 'post4796102528')"><pre>            self._query.add_q(~Q(*args, **kwargs))</pre></li>
                  
                  <li onclick="toggle('pre4796102528', 'post4796102528')"><pre>        else:</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v4796102528">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>clone</td>
                    <td class="code"><pre>&lt;QuerySet [&lt;User: yoon&gt;, &lt;User: 윤무열&gt;, &lt;User: Test User&gt;, &lt;User: 두희&gt;]&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#x27;user_id&#x27;: &#x27;user123&#x27;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>negate</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;QuerySet [&lt;User: yoon&gt;, &lt;User: 윤무열&gt;, &lt;User: Test User&gt;, &lt;User: 두희&gt;]&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/Users/yoobmooyeol/project/Florence_project/.venv/lib/python3.11/site-packages/django/db/models/query.py</code>, line 1461, in _filter_or_exclude_inplace
          

          
            <div class="context" id="c4796094464">
              
                <ol start="1454" class="pre-context" id="pre4796094464">
                
                  <li onclick="toggle('pre4796094464', 'post4796094464')"><pre>            clone._filter_or_exclude_inplace(negate, args, kwargs)</pre></li>
                
                  <li onclick="toggle('pre4796094464', 'post4796094464')"><pre>        return clone</pre></li>
                
                  <li onclick="toggle('pre4796094464', 'post4796094464')"><pre></pre></li>
                
                  <li onclick="toggle('pre4796094464', 'post4796094464')"><pre>    def _filter_or_exclude_inplace(self, negate, args, kwargs):</pre></li>
                
                  <li onclick="toggle('pre4796094464', 'post4796094464')"><pre>        if negate:</pre></li>
                
                  <li onclick="toggle('pre4796094464', 'post4796094464')"><pre>            self._query.add_q(~Q(*args, **kwargs))</pre></li>
                
                  <li onclick="toggle('pre4796094464', 'post4796094464')"><pre>        else:</pre></li>
                
                </ol>
              
              <ol start="1461" class="context-line">
                <li onclick="toggle('pre4796094464', 'post4796094464')"><pre>            self._query.add_q(Q(*args, **kwargs))
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='1462' class="post-context" id="post4796094464">
                  
                  <li onclick="toggle('pre4796094464', 'post4796094464')"><pre></pre></li>
                  
                  <li onclick="toggle('pre4796094464', 'post4796094464')"><pre>    def complex_filter(self, filter_obj):</pre></li>
                  
                  <li onclick="toggle('pre4796094464', 'post4796094464')"><pre>        &quot;&quot;&quot;</pre></li>
                  
                  <li onclick="toggle('pre4796094464', 'post4796094464')"><pre>        Return a new QuerySet instance with filter_obj added to the filters.</pre></li>
                  
                  <li onclick="toggle('pre4796094464', 'post4796094464')"><pre></pre></li>
                  
                  <li onclick="toggle('pre4796094464', 'post4796094464')"><pre>        filter_obj can be a Q object or a dictionary of keyword lookup</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v4796094464">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#x27;user_id&#x27;: &#x27;user123&#x27;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>negate</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;QuerySet [&lt;User: yoon&gt;, &lt;User: 윤무열&gt;, &lt;User: Test User&gt;, &lt;User: 두희&gt;]&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/Users/yoobmooyeol/project/Florence_project/.venv/lib/python3.11/site-packages/django/db/models/sql/query.py</code>, line 1498, in add_q
          

          
            <div class="context" id="c4796091456">
              
                <ol start="1491" class="pre-context" id="pre4796091456">
                
                  <li onclick="toggle('pre4796091456', 'post4796091456')"><pre>        # type to remain inner. Existing outer joins can however be demoted.</pre></li>
                
                  <li onclick="toggle('pre4796091456', 'post4796091456')"><pre>        # (Consider case where rel_a is LOUTER and rel_a__col=1 is added - if</pre></li>
                
                  <li onclick="toggle('pre4796091456', 'post4796091456')"><pre>        # rel_a doesn&#x27;t produce any rows, then the whole condition must fail.</pre></li>
                
                  <li onclick="toggle('pre4796091456', 'post4796091456')"><pre>        # So, demotion is OK.</pre></li>
                
                  <li onclick="toggle('pre4796091456', 'post4796091456')"><pre>        existing_inner = {</pre></li>
                
                  <li onclick="toggle('pre4796091456', 'post4796091456')"><pre>            a for a in self.alias_map if self.alias_map[a].join_type == INNER</pre></li>
                
                  <li onclick="toggle('pre4796091456', 'post4796091456')"><pre>        }</pre></li>
                
                </ol>
              
              <ol start="1498" class="context-line">
                <li onclick="toggle('pre4796091456', 'post4796091456')"><pre>        clause, _ = self._add_q(q_object, self.used_aliases)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='1499' class="post-context" id="post4796091456">
                  
                  <li onclick="toggle('pre4796091456', 'post4796091456')"><pre>        if clause:</pre></li>
                  
                  <li onclick="toggle('pre4796091456', 'post4796091456')"><pre>            self.where.add(clause, AND)</pre></li>
                  
                  <li onclick="toggle('pre4796091456', 'post4796091456')"><pre>        self.demote_joins(existing_inner)</pre></li>
                  
                  <li onclick="toggle('pre4796091456', 'post4796091456')"><pre></pre></li>
                  
                  <li onclick="toggle('pre4796091456', 'post4796091456')"><pre>    def build_where(self, filter_expr):</pre></li>
                  
                  <li onclick="toggle('pre4796091456', 'post4796091456')"><pre>        return self.build_filter(filter_expr, allow_joins=False)[0]</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v4796091456">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>existing_inner</td>
                    <td class="code"><pre>set()</pre></td>
                  </tr>
                
                  <tr>
                    <td>q_object</td>
                    <td class="code"><pre>&lt;Q: (AND: (&#x27;user_id&#x27;, &#x27;user123&#x27;))&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.models.sql.query.Query object at 0x11dde8050&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/Users/yoobmooyeol/project/Florence_project/.venv/lib/python3.11/site-packages/django/db/models/sql/query.py</code>, line 1529, in _add_q
          

          
            <div class="context" id="c4796095296">
              
                <ol start="1522" class="pre-context" id="pre4796095296">
                
                  <li onclick="toggle('pre4796095296', 'post4796095296')"><pre>        current_negated ^= q_object.negated</pre></li>
                
                  <li onclick="toggle('pre4796095296', 'post4796095296')"><pre>        branch_negated = branch_negated or q_object.negated</pre></li>
                
                  <li onclick="toggle('pre4796095296', 'post4796095296')"><pre>        target_clause = WhereNode(connector=connector, negated=q_object.negated)</pre></li>
                
                  <li onclick="toggle('pre4796095296', 'post4796095296')"><pre>        joinpromoter = JoinPromoter(</pre></li>
                
                  <li onclick="toggle('pre4796095296', 'post4796095296')"><pre>            q_object.connector, len(q_object.children), current_negated</pre></li>
                
                  <li onclick="toggle('pre4796095296', 'post4796095296')"><pre>        )</pre></li>
                
                  <li onclick="toggle('pre4796095296', 'post4796095296')"><pre>        for child in q_object.children:</pre></li>
                
                </ol>
              
              <ol start="1529" class="context-line">
                <li onclick="toggle('pre4796095296', 'post4796095296')"><pre>            child_clause, needed_inner = self.build_filter(
                                               </pre> <span>…</span></li>
              </ol>
              
                <ol start='1530' class="post-context" id="post4796095296">
                  
                  <li onclick="toggle('pre4796095296', 'post4796095296')"><pre>                child,</pre></li>
                  
                  <li onclick="toggle('pre4796095296', 'post4796095296')"><pre>                can_reuse=used_aliases,</pre></li>
                  
                  <li onclick="toggle('pre4796095296', 'post4796095296')"><pre>                branch_negated=branch_negated,</pre></li>
                  
                  <li onclick="toggle('pre4796095296', 'post4796095296')"><pre>                current_negated=current_negated,</pre></li>
                  
                  <li onclick="toggle('pre4796095296', 'post4796095296')"><pre>                allow_joins=allow_joins,</pre></li>
                  
                  <li onclick="toggle('pre4796095296', 'post4796095296')"><pre>                split_subq=split_subq,</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v4796095296">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>allow_joins</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>branch_negated</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>check_filterable</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>child</td>
                    <td class="code"><pre>(&#x27;user_id&#x27;, &#x27;user123&#x27;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>connector</td>
                    <td class="code"><pre>&#x27;AND&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>current_negated</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>joinpromoter</td>
                    <td class="code"><pre>JoinPromoter(connector=&#x27;AND&#x27;, num_children=1, negated=False)</pre></td>
                  </tr>
                
                  <tr>
                    <td>q_object</td>
                    <td class="code"><pre>&lt;Q: (AND: (&#x27;user_id&#x27;, &#x27;user123&#x27;))&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.models.sql.query.Query object at 0x11dde8050&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>split_subq</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>summarize</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>target_clause</td>
                    <td class="code"><pre>&lt;WhereNode: (AND: )&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>used_aliases</td>
                    <td class="code"><pre>{&#x27;accounts_user&#x27;}</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/Users/yoobmooyeol/project/Florence_project/.venv/lib/python3.11/site-packages/django/db/models/sql/query.py</code>, line 1444, in build_filter
          

          
            <div class="context" id="c4796093056">
              
                <ol start="1437" class="pre-context" id="pre4796093056">
                
                  <li onclick="toggle('pre4796093056', 'post4796093056')"><pre>            else:</pre></li>
                
                  <li onclick="toggle('pre4796093056', 'post4796093056')"><pre>                col = MultiColSource(</pre></li>
                
                  <li onclick="toggle('pre4796093056', 'post4796093056')"><pre>                    alias, targets, join_info.targets, join_info.final_field</pre></li>
                
                  <li onclick="toggle('pre4796093056', 'post4796093056')"><pre>                )</pre></li>
                
                  <li onclick="toggle('pre4796093056', 'post4796093056')"><pre>        else:</pre></li>
                
                  <li onclick="toggle('pre4796093056', 'post4796093056')"><pre>            col = self._get_col(targets[0], join_info.final_field, alias)</pre></li>
                
                  <li onclick="toggle('pre4796093056', 'post4796093056')"><pre></pre></li>
                
                </ol>
              
              <ol start="1444" class="context-line">
                <li onclick="toggle('pre4796093056', 'post4796093056')"><pre>        condition = self.build_lookup(lookups, col, value)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='1445' class="post-context" id="post4796093056">
                  
                  <li onclick="toggle('pre4796093056', 'post4796093056')"><pre>        lookup_type = condition.lookup_name</pre></li>
                  
                  <li onclick="toggle('pre4796093056', 'post4796093056')"><pre>        clause = WhereNode([condition], connector=AND)</pre></li>
                  
                  <li onclick="toggle('pre4796093056', 'post4796093056')"><pre></pre></li>
                  
                  <li onclick="toggle('pre4796093056', 'post4796093056')"><pre>        require_outer = (</pre></li>
                  
                  <li onclick="toggle('pre4796093056', 'post4796093056')"><pre>            lookup_type == &quot;isnull&quot; and condition.rhs is True and not current_negated</pre></li>
                  
                  <li onclick="toggle('pre4796093056', 'post4796093056')"><pre>        )</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v4796093056">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>alias</td>
                    <td class="code"><pre>&#x27;accounts_user&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>allow_joins</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>allow_many</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>arg</td>
                    <td class="code"><pre>&#x27;user_id&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>branch_negated</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>can_reuse</td>
                    <td class="code"><pre>{&#x27;accounts_user&#x27;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>check_filterable</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>col</td>
                    <td class="code"><pre>Col(accounts_user, accounts.User.user_id)</pre></td>
                  </tr>
                
                  <tr>
                    <td>current_negated</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>filter_expr</td>
                    <td class="code"><pre>(&#x27;user_id&#x27;, &#x27;user123&#x27;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>join_info</td>
                    <td class="code"><pre>JoinInfo(final_field=&lt;django.db.models.fields.UUIDField: user_id&gt;, targets=(&lt;django.db.models.fields.UUIDField: user_id&gt;,), opts=&lt;Options for User&gt;, joins=[&#x27;accounts_user&#x27;], path=[], transform_function=&lt;function Query.setup_joins.&lt;locals&gt;.final_transformer at 0x11dd9a480&gt;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>join_list</td>
                    <td class="code"><pre>[&#x27;accounts_user&#x27;]</pre></td>
                  </tr>
                
                  <tr>
                    <td>lookups</td>
                    <td class="code"><pre>[]</pre></td>
                  </tr>
                
                  <tr>
                    <td>opts</td>
                    <td class="code"><pre>&lt;Options for User&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>parts</td>
                    <td class="code"><pre>[&#x27;user_id&#x27;]</pre></td>
                  </tr>
                
                  <tr>
                    <td>pre_joins</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>reffed_expression</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>reuse_with_filtered_relation</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.models.sql.query.Query object at 0x11dde8050&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>split_subq</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>summarize</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>targets</td>
                    <td class="code"><pre>(&lt;django.db.models.fields.UUIDField: user_id&gt;,)</pre></td>
                  </tr>
                
                  <tr>
                    <td>used_joins</td>
                    <td class="code"><pre>{&#x27;accounts_user&#x27;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>value</td>
                    <td class="code"><pre>&#x27;user123&#x27;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/Users/yoobmooyeol/project/Florence_project/.venv/lib/python3.11/site-packages/django/db/models/sql/query.py</code>, line 1271, in build_lookup
          

          
            <div class="context" id="c4796102400">
              
                <ol start="1264" class="pre-context" id="pre4796102400">
                
                  <li onclick="toggle('pre4796102400', 'post4796102400')"><pre>            # and do an Exact lookup against it.</pre></li>
                
                  <li onclick="toggle('pre4796102400', 'post4796102400')"><pre>            lhs = self.try_transform(lhs, lookup_name)</pre></li>
                
                  <li onclick="toggle('pre4796102400', 'post4796102400')"><pre>            lookup_name = &quot;exact&quot;</pre></li>
                
                  <li onclick="toggle('pre4796102400', 'post4796102400')"><pre>            lookup_class = lhs.get_lookup(lookup_name)</pre></li>
                
                  <li onclick="toggle('pre4796102400', 'post4796102400')"><pre>            if not lookup_class:</pre></li>
                
                  <li onclick="toggle('pre4796102400', 'post4796102400')"><pre>                return</pre></li>
                
                  <li onclick="toggle('pre4796102400', 'post4796102400')"><pre></pre></li>
                
                </ol>
              
              <ol start="1271" class="context-line">
                <li onclick="toggle('pre4796102400', 'post4796102400')"><pre>        lookup = lookup_class(lhs, rhs)
                       ^^^^^^^^^^^^^^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='1272' class="post-context" id="post4796102400">
                  
                  <li onclick="toggle('pre4796102400', 'post4796102400')"><pre>        # Interpret &#x27;__exact=None&#x27; as the sql &#x27;is NULL&#x27;; otherwise, reject all</pre></li>
                  
                  <li onclick="toggle('pre4796102400', 'post4796102400')"><pre>        # uses of None as a query value unless the lookup supports it.</pre></li>
                  
                  <li onclick="toggle('pre4796102400', 'post4796102400')"><pre>        if lookup.rhs is None and not lookup.can_use_none_as_rhs:</pre></li>
                  
                  <li onclick="toggle('pre4796102400', 'post4796102400')"><pre>            if lookup_name not in (&quot;exact&quot;, &quot;iexact&quot;):</pre></li>
                  
                  <li onclick="toggle('pre4796102400', 'post4796102400')"><pre>                raise ValueError(&quot;Cannot use None as a query value&quot;)</pre></li>
                  
                  <li onclick="toggle('pre4796102400', 'post4796102400')"><pre>            return lhs.get_lookup(&quot;isnull&quot;)(lhs, True)</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v4796102400">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>lhs</td>
                    <td class="code"><pre>Col(accounts_user, accounts.User.user_id)</pre></td>
                  </tr>
                
                  <tr>
                    <td>lookup_class</td>
                    <td class="code"><pre>&lt;class &#x27;django.db.models.lookups.Exact&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>lookup_name</td>
                    <td class="code"><pre>&#x27;exact&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>lookups</td>
                    <td class="code"><pre>[]</pre></td>
                  </tr>
                
                  <tr>
                    <td>rhs</td>
                    <td class="code"><pre>&#x27;user123&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.models.sql.query.Query object at 0x11dde8050&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>transforms</td>
                    <td class="code"><pre>[]</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/Users/yoobmooyeol/project/Florence_project/.venv/lib/python3.11/site-packages/django/db/models/lookups.py</code>, line 27, in __init__
          

          
            <div class="context" id="c4796102144">
              
                <ol start="20" class="pre-context" id="pre4796102144">
                
                  <li onclick="toggle('pre4796102144', 'post4796102144')"><pre>class Lookup(Expression):</pre></li>
                
                  <li onclick="toggle('pre4796102144', 'post4796102144')"><pre>    lookup_name = None</pre></li>
                
                  <li onclick="toggle('pre4796102144', 'post4796102144')"><pre>    prepare_rhs = True</pre></li>
                
                  <li onclick="toggle('pre4796102144', 'post4796102144')"><pre>    can_use_none_as_rhs = False</pre></li>
                
                  <li onclick="toggle('pre4796102144', 'post4796102144')"><pre></pre></li>
                
                  <li onclick="toggle('pre4796102144', 'post4796102144')"><pre>    def __init__(self, lhs, rhs):</pre></li>
                
                  <li onclick="toggle('pre4796102144', 'post4796102144')"><pre>        self.lhs, self.rhs = lhs, rhs</pre></li>
                
                </ol>
              
              <ol start="27" class="context-line">
                <li onclick="toggle('pre4796102144', 'post4796102144')"><pre>        self.rhs = self.get_prep_lookup()
                       ^^^^^^^^^^^^^^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='28' class="post-context" id="post4796102144">
                  
                  <li onclick="toggle('pre4796102144', 'post4796102144')"><pre>        self.lhs = self.get_prep_lhs()</pre></li>
                  
                  <li onclick="toggle('pre4796102144', 'post4796102144')"><pre>        if hasattr(self.lhs, &quot;get_bilateral_transforms&quot;):</pre></li>
                  
                  <li onclick="toggle('pre4796102144', 'post4796102144')"><pre>            bilateral_transforms = self.lhs.get_bilateral_transforms()</pre></li>
                  
                  <li onclick="toggle('pre4796102144', 'post4796102144')"><pre>        else:</pre></li>
                  
                  <li onclick="toggle('pre4796102144', 'post4796102144')"><pre>            bilateral_transforms = []</pre></li>
                  
                  <li onclick="toggle('pre4796102144', 'post4796102144')"><pre>        if bilateral_transforms:</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v4796102144">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>lhs</td>
                    <td class="code"><pre>Col(accounts_user, accounts.User.user_id)</pre></td>
                  </tr>
                
                  <tr>
                    <td>rhs</td>
                    <td class="code"><pre>&#x27;user123&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>Exact(Col(accounts_user, accounts.User.user_id), &#x27;user123&#x27;)</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/Users/yoobmooyeol/project/Florence_project/.venv/lib/python3.11/site-packages/django/db/models/lookups.py</code>, line 341, in get_prep_lookup
          

          
            <div class="context" id="c4796090624">
              
                <ol start="334" class="pre-context" id="pre4796090624">
                
                  <li onclick="toggle('pre4796090624', 'post4796090624')"><pre>                    self.rhs.clear_select_clause()</pre></li>
                
                  <li onclick="toggle('pre4796090624', 'post4796090624')"><pre>                    self.rhs.add_fields([&quot;pk&quot;])</pre></li>
                
                  <li onclick="toggle('pre4796090624', 'post4796090624')"><pre>            else:</pre></li>
                
                  <li onclick="toggle('pre4796090624', 'post4796090624')"><pre>                raise ValueError(</pre></li>
                
                  <li onclick="toggle('pre4796090624', 'post4796090624')"><pre>                    &quot;The QuerySet value for an exact lookup must be limited to &quot;</pre></li>
                
                  <li onclick="toggle('pre4796090624', 'post4796090624')"><pre>                    &quot;one result using slicing.&quot;</pre></li>
                
                  <li onclick="toggle('pre4796090624', 'post4796090624')"><pre>                )</pre></li>
                
                </ol>
              
              <ol start="341" class="context-line">
                <li onclick="toggle('pre4796090624', 'post4796090624')"><pre>        return super().get_prep_lookup()
                    ^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='342' class="post-context" id="post4796090624">
                  
                  <li onclick="toggle('pre4796090624', 'post4796090624')"><pre></pre></li>
                  
                  <li onclick="toggle('pre4796090624', 'post4796090624')"><pre>    def as_sql(self, compiler, connection):</pre></li>
                  
                  <li onclick="toggle('pre4796090624', 'post4796090624')"><pre>        # Avoid comparison against direct rhs if lhs is a boolean value. That</pre></li>
                  
                  <li onclick="toggle('pre4796090624', 'post4796090624')"><pre>        # turns &quot;boolfield__exact=True&quot; into &quot;WHERE boolean_field&quot; instead of</pre></li>
                  
                  <li onclick="toggle('pre4796090624', 'post4796090624')"><pre>        # &quot;WHERE boolean_field = True&quot; when allowed.</pre></li>
                  
                  <li onclick="toggle('pre4796090624', 'post4796090624')"><pre>        if (</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v4796090624">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>Query</td>
                    <td class="code"><pre>&lt;class &#x27;django.db.models.sql.query.Query&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>__class__</td>
                    <td class="code"><pre>&lt;class &#x27;django.db.models.lookups.Exact&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>Exact(Col(accounts_user, accounts.User.user_id), &#x27;user123&#x27;)</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/Users/yoobmooyeol/project/Florence_project/.venv/lib/python3.11/site-packages/django/db/models/lookups.py</code>, line 85, in get_prep_lookup
          

          
            <div class="context" id="c4796100416">
              
                <ol start="78" class="pre-context" id="pre4796100416">
                
                  <li onclick="toggle('pre4796100416', 'post4796100416')"><pre>            self.lhs, self.rhs = new_exprs</pre></li>
                
                  <li onclick="toggle('pre4796100416', 'post4796100416')"><pre></pre></li>
                
                  <li onclick="toggle('pre4796100416', 'post4796100416')"><pre>    def get_prep_lookup(self):</pre></li>
                
                  <li onclick="toggle('pre4796100416', 'post4796100416')"><pre>        if not self.prepare_rhs or hasattr(self.rhs, &quot;resolve_expression&quot;):</pre></li>
                
                  <li onclick="toggle('pre4796100416', 'post4796100416')"><pre>            return self.rhs</pre></li>
                
                  <li onclick="toggle('pre4796100416', 'post4796100416')"><pre>        if hasattr(self.lhs, &quot;output_field&quot;):</pre></li>
                
                  <li onclick="toggle('pre4796100416', 'post4796100416')"><pre>            if hasattr(self.lhs.output_field, &quot;get_prep_value&quot;):</pre></li>
                
                </ol>
              
              <ol start="85" class="context-line">
                <li onclick="toggle('pre4796100416', 'post4796100416')"><pre>                return self.lhs.output_field.get_prep_value(self.rhs)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='86' class="post-context" id="post4796100416">
                  
                  <li onclick="toggle('pre4796100416', 'post4796100416')"><pre>        elif self.rhs_is_direct_value():</pre></li>
                  
                  <li onclick="toggle('pre4796100416', 'post4796100416')"><pre>            return Value(self.rhs)</pre></li>
                  
                  <li onclick="toggle('pre4796100416', 'post4796100416')"><pre>        return self.rhs</pre></li>
                  
                  <li onclick="toggle('pre4796100416', 'post4796100416')"><pre></pre></li>
                  
                  <li onclick="toggle('pre4796100416', 'post4796100416')"><pre>    def get_prep_lhs(self):</pre></li>
                  
                  <li onclick="toggle('pre4796100416', 'post4796100416')"><pre>        if hasattr(self.lhs, &quot;resolve_expression&quot;):</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v4796100416">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>Exact(Col(accounts_user, accounts.User.user_id), &#x27;user123&#x27;)</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/Users/yoobmooyeol/project/Florence_project/.venv/lib/python3.11/site-packages/django/db/models/fields/__init__.py</code>, line 2674, in get_prep_value
          

          
            <div class="context" id="c4796090112">
              
                <ol start="2667" class="pre-context" id="pre4796090112">
                
                  <li onclick="toggle('pre4796090112', 'post4796090112')"><pre>        return name, path, args, kwargs</pre></li>
                
                  <li onclick="toggle('pre4796090112', 'post4796090112')"><pre></pre></li>
                
                  <li onclick="toggle('pre4796090112', 'post4796090112')"><pre>    def get_internal_type(self):</pre></li>
                
                  <li onclick="toggle('pre4796090112', 'post4796090112')"><pre>        return &quot;UUIDField&quot;</pre></li>
                
                  <li onclick="toggle('pre4796090112', 'post4796090112')"><pre></pre></li>
                
                  <li onclick="toggle('pre4796090112', 'post4796090112')"><pre>    def get_prep_value(self, value):</pre></li>
                
                  <li onclick="toggle('pre4796090112', 'post4796090112')"><pre>        value = super().get_prep_value(value)</pre></li>
                
                </ol>
              
              <ol start="2674" class="context-line">
                <li onclick="toggle('pre4796090112', 'post4796090112')"><pre>        return self.to_python(value)
                     ^^^^^^^^^^^^^^^^^^^^^</pre> <span>…</span></li>
              </ol>
              
                <ol start='2675' class="post-context" id="post4796090112">
                  
                  <li onclick="toggle('pre4796090112', 'post4796090112')"><pre></pre></li>
                  
                  <li onclick="toggle('pre4796090112', 'post4796090112')"><pre>    def get_db_prep_value(self, value, connection, prepared=False):</pre></li>
                  
                  <li onclick="toggle('pre4796090112', 'post4796090112')"><pre>        if value is None:</pre></li>
                  
                  <li onclick="toggle('pre4796090112', 'post4796090112')"><pre>            return None</pre></li>
                  
                  <li onclick="toggle('pre4796090112', 'post4796090112')"><pre>        if not isinstance(value, uuid.UUID):</pre></li>
                  
                  <li onclick="toggle('pre4796090112', 'post4796090112')"><pre>            value = self.to_python(value)</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v4796090112">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>__class__</td>
                    <td class="code"><pre>&lt;class &#x27;django.db.models.fields.UUIDField&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.models.fields.UUIDField: user_id&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>value</td>
                    <td class="code"><pre>&#x27;user123&#x27;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">/Users/yoobmooyeol/project/Florence_project/.venv/lib/python3.11/site-packages/django/db/models/fields/__init__.py</code>, line 2692, in to_python
          

          
            <div class="context" id="c4796093568">
              
                <ol start="2685" class="pre-context" id="pre4796093568">
                
                  <li onclick="toggle('pre4796093568', 'post4796093568')"><pre></pre></li>
                
                  <li onclick="toggle('pre4796093568', 'post4796093568')"><pre>    def to_python(self, value):</pre></li>
                
                  <li onclick="toggle('pre4796093568', 'post4796093568')"><pre>        if value is not None and not isinstance(value, uuid.UUID):</pre></li>
                
                  <li onclick="toggle('pre4796093568', 'post4796093568')"><pre>            input_form = &quot;int&quot; if isinstance(value, int) else &quot;hex&quot;</pre></li>
                
                  <li onclick="toggle('pre4796093568', 'post4796093568')"><pre>            try:</pre></li>
                
                  <li onclick="toggle('pre4796093568', 'post4796093568')"><pre>                return uuid.UUID(**{input_form: value})</pre></li>
                
                  <li onclick="toggle('pre4796093568', 'post4796093568')"><pre>            except (AttributeError, ValueError):</pre></li>
                
                </ol>
              
              <ol start="2692" class="context-line">
                <li onclick="toggle('pre4796093568', 'post4796093568')"><pre>                raise exceptions.ValidationError(
                      ^</pre> <span>…</span></li>
              </ol>
              
                <ol start='2693' class="post-context" id="post4796093568">
                  
                  <li onclick="toggle('pre4796093568', 'post4796093568')"><pre>                    self.error_messages[&quot;invalid&quot;],</pre></li>
                  
                  <li onclick="toggle('pre4796093568', 'post4796093568')"><pre>                    code=&quot;invalid&quot;,</pre></li>
                  
                  <li onclick="toggle('pre4796093568', 'post4796093568')"><pre>                    params={&quot;value&quot;: value},</pre></li>
                  
                  <li onclick="toggle('pre4796093568', 'post4796093568')"><pre>                )</pre></li>
                  
                  <li onclick="toggle('pre4796093568', 'post4796093568')"><pre>        return value</pre></li>
                  
                  <li onclick="toggle('pre4796093568', 'post4796093568')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v4796093568">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>input_form</td>
                    <td class="code"><pre>&#x27;hex&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.models.fields.UUIDField: user_id&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>value</td>
                    <td class="code"><pre>&#x27;user123&#x27;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
    </ul>
  </div>

  <form action="https://dpaste.com/" name="pasteform" id="pasteform" method="post">
  <div id="pastebinTraceback" class="pastebin">
    <input type="hidden" name="language" value="PythonConsole">
    <input type="hidden" name="title"
      value="ValidationError at /v1/llm/">
    <input type="hidden" name="source" value="Django Dpaste Agent">
    <input type="hidden" name="poster" value="Django">
    <textarea name="content" id="traceback_area" cols="140" rows="25">
Environment:


Request Method: POST
Request URL: http://localhost:8000/v1/llm/

Django Version: 4.2
Python Version: 3.11.9
Installed Applications:
[&#x27;django.contrib.admin&#x27;,
 &#x27;django.contrib.auth&#x27;,
 &#x27;django.contrib.contenttypes&#x27;,
 &#x27;django.contrib.sessions&#x27;,
 &#x27;django.contrib.messages&#x27;,
 &#x27;django.contrib.staticfiles&#x27;,
 &#x27;rest_framework_simplejwt&#x27;,
 &#x27;rest_framework&#x27;,
 &#x27;corsheaders&#x27;,
 &#x27;rag&#x27;,
 &#x27;accounts&#x27;,
 &#x27;llm&#x27;,
 &#x27;healthcare&#x27;]
Installed Middleware:
[&#x27;corsheaders.middleware.CorsMiddleware&#x27;,
 &#x27;django.middleware.security.SecurityMiddleware&#x27;,
 &#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;,
 &#x27;django.middleware.common.CommonMiddleware&#x27;,
 &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,
 &#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;,
 &#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;,
 &#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;]



Traceback (most recent call last):
  File "/Users/yoobmooyeol/project/Florence_project/.venv/lib/python3.11/site-packages/django/db/models/fields/__init__.py", line 2690, in to_python
    return uuid.UUID(**{input_form: value})
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yoobmooyeol/.pyenv/versions/3.11.9/lib/python3.11/uuid.py", line 178, in __init__
    raise ValueError(&#x27;badly formed hexadecimal UUID string&#x27;)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

During handling of the above exception (badly formed hexadecimal UUID string), another exception occurred:
  File "/Users/yoobmooyeol/project/Florence_project/.venv/lib/python3.11/site-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
               ^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yoobmooyeol/project/Florence_project/.venv/lib/python3.11/site-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yoobmooyeol/project/Florence_project/.venv/lib/python3.11/site-packages/django/views/decorators/csrf.py", line 56, in wrapper_view
    return view_func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yoobmooyeol/project/Florence_project/.venv/lib/python3.11/site-packages/django/views/generic/base.py", line 104, in view
    return self.dispatch(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yoobmooyeol/project/Florence_project/.venv/lib/python3.11/site-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yoobmooyeol/project/Florence_project/.venv/lib/python3.11/site-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yoobmooyeol/project/Florence_project/.venv/lib/python3.11/site-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
    ^^^^^^^^^
  File "/Users/yoobmooyeol/project/Florence_project/.venv/lib/python3.11/site-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yoobmooyeol/project/Florence_project/llm/views.py", line 61, in post
    user = custom_get_object_or_404(User, user_id=user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yoobmooyeol/project/Florence_project/llm/views.py", line 30, in custom_get_object_or_404
    return klass.objects.get(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yoobmooyeol/project/Florence_project/.venv/lib/python3.11/site-packages/django/db/models/manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yoobmooyeol/project/Florence_project/.venv/lib/python3.11/site-packages/django/db/models/query.py", line 623, in get
    clone = self._chain() if self.query.combinator else self.filter(*args, **kwargs)
                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yoobmooyeol/project/Florence_project/.venv/lib/python3.11/site-packages/django/db/models/query.py", line 1436, in filter
    return self._filter_or_exclude(False, args, kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yoobmooyeol/project/Florence_project/.venv/lib/python3.11/site-packages/django/db/models/query.py", line 1454, in _filter_or_exclude
    clone._filter_or_exclude_inplace(negate, args, kwargs)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yoobmooyeol/project/Florence_project/.venv/lib/python3.11/site-packages/django/db/models/query.py", line 1461, in _filter_or_exclude_inplace
    self._query.add_q(Q(*args, **kwargs))
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yoobmooyeol/project/Florence_project/.venv/lib/python3.11/site-packages/django/db/models/sql/query.py", line 1498, in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yoobmooyeol/project/Florence_project/.venv/lib/python3.11/site-packages/django/db/models/sql/query.py", line 1529, in _add_q
    child_clause, needed_inner = self.build_filter(
                                 
  File "/Users/yoobmooyeol/project/Florence_project/.venv/lib/python3.11/site-packages/django/db/models/sql/query.py", line 1444, in build_filter
    condition = self.build_lookup(lookups, col, value)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yoobmooyeol/project/Florence_project/.venv/lib/python3.11/site-packages/django/db/models/sql/query.py", line 1271, in build_lookup
    lookup = lookup_class(lhs, rhs)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yoobmooyeol/project/Florence_project/.venv/lib/python3.11/site-packages/django/db/models/lookups.py", line 27, in __init__
    self.rhs = self.get_prep_lookup()
               ^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yoobmooyeol/project/Florence_project/.venv/lib/python3.11/site-packages/django/db/models/lookups.py", line 341, in get_prep_lookup
    return super().get_prep_lookup()
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yoobmooyeol/project/Florence_project/.venv/lib/python3.11/site-packages/django/db/models/lookups.py", line 85, in get_prep_lookup
    return self.lhs.output_field.get_prep_value(self.rhs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yoobmooyeol/project/Florence_project/.venv/lib/python3.11/site-packages/django/db/models/fields/__init__.py", line 2674, in get_prep_value
    return self.to_python(value)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/Users/yoobmooyeol/project/Florence_project/.venv/lib/python3.11/site-packages/django/db/models/fields/__init__.py", line 2692, in to_python
    raise exceptions.ValidationError(
    ^

Exception Type: ValidationError at /v1/llm/
Exception Value: [&#x27;&quot;user123&quot;은 유효하지 않은 UUID입니다.&#x27;]
</textarea>
  <br><br>
  <input type="submit" value="Share this traceback on a public website">
  </div>
</form>

</div>


<div id="requestinfo">
  <h2>Request information</h2>


  
    <h3 id="user-info">USER</h3>
    <p>AnonymousUser</p>
  

  <h3 id="get-info">GET</h3>
  
    <p>No GET data</p>
  

  <h3 id="post-info">POST</h3>
  
    <p>No POST data</p>
  

  <h3 id="files-info">FILES</h3>
  
    <p>No FILES data</p>
  

  <h3 id="cookie-info">COOKIES</h3>
  
    <p>No cookie data</p>
  

  <h3 id="meta-info">META</h3>
  <table class="req">
    <thead>
      <tr>
        <th>Variable</th>
        <th>Value</th>
      </tr>
    </thead>
    <tbody>
      
        <tr>
          <td>COLORTERM</td>
          <td class="code"><pre>&#x27;truecolor&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>COMMAND_MODE</td>
          <td class="code"><pre>&#x27;unix2003&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CONDA_DEFAULT_ENV</td>
          <td class="code"><pre>&#x27;base&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CONDA_EXE</td>
          <td class="code"><pre>&#x27;/opt/anaconda3/bin/conda&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CONDA_PREFIX</td>
          <td class="code"><pre>&#x27;/opt/anaconda3&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CONDA_PROMPT_MODIFIER</td>
          <td class="code"><pre>&#x27;(base) &#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CONDA_PYTHON_EXE</td>
          <td class="code"><pre>&#x27;/opt/anaconda3/bin/python&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CONDA_SHLVL</td>
          <td class="code"><pre>&#x27;1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CONTENT_LENGTH</td>
          <td class="code"><pre>&#x27;122&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CONTENT_TYPE</td>
          <td class="code"><pre>&#x27;application/json&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CURSOR_TRACE_ID</td>
          <td class="code"><pre>&#x27;e643ac5561cd451eafe43df3719380c4&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DB_ENGINE</td>
          <td class="code"><pre>&#x27;django.db.backends.postgresql&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DB_HOST</td>
          <td class="code"><pre>&#x27;localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DB_NAME</td>
          <td class="code"><pre>&#x27;florence_db&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DB_PASSWORD</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DB_PORT</td>
          <td class="code"><pre>&#x27;5432&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DB_USER</td>
          <td class="code"><pre>&#x27;postgres&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEEPL_API_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DJANGO_SETTINGS_MODULE</td>
          <td class="code"><pre>&#x27;config.settings&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>FIRECRAWL_API_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GATEWAY_INTERFACE</td>
          <td class="code"><pre>&#x27;CGI/1.1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GIT_ASKPASS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GSETTINGS_SCHEMA_DIR</td>
          <td class="code"><pre>&#x27;/opt/anaconda3/share/glib-2.0/schemas&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GSETTINGS_SCHEMA_DIR_CONDA_BACKUP</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HOME</td>
          <td class="code"><pre>&#x27;/Users/yoobmooyeol&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HOMEBREW_CELLAR</td>
          <td class="code"><pre>&#x27;/opt/homebrew/Cellar&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HOMEBREW_PREFIX</td>
          <td class="code"><pre>&#x27;/opt/homebrew&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HOMEBREW_REPOSITORY</td>
          <td class="code"><pre>&#x27;/opt/homebrew&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_ACCEPT</td>
          <td class="code"><pre>&#x27;*/*&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_HOST</td>
          <td class="code"><pre>&#x27;localhost:8000&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_USER_AGENT</td>
          <td class="code"><pre>&#x27;curl/8.9.1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>INFOPATH</td>
          <td class="code"><pre>&#x27;/opt/homebrew/share/info:/opt/homebrew/share/info:&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>JAVA_HOME</td>
          <td class="code"><pre>&#x27;/opt/homebrew/Cellar/openjdk/23.0.2/libexec/openjdk.jdk/Contents/Home&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANG</td>
          <td class="code"><pre>&#x27;ko_KR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LC_CTYPE</td>
          <td class="code"><pre>&#x27;ko_KR.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LESS</td>
          <td class="code"><pre>&#x27;-R&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LLM_MODEL</td>
          <td class="code"><pre>&#x27;gpt-4o-mini&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGNAME</td>
          <td class="code"><pre>&#x27;yoobmooyeol&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LSCOLORS</td>
          <td class="code"><pre>&#x27;Gxfxcxdxbxegedabagacad&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LS_COLORS</td>
          <td class="code"><pre>&#x27;di=1;36:ln=35:so=32:pi=33:ex=31:bd=34;46:cd=34;43:su=30;41:sg=30;46:tw=30;42:ow=30;43&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MallocNanoZone</td>
          <td class="code"><pre>&#x27;0&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>OLDPWD</td>
          <td class="code"><pre>&#x27;/Users/yoobmooyeol/project/Florence_project&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>OPENAI_API_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>ORIGINAL_XDG_CURRENT_DESKTOP</td>
          <td class="code"><pre>&#x27;undefined&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>P9K_SSH</td>
          <td class="code"><pre>&#x27;0&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>P9K_TTY</td>
          <td class="code"><pre>&#x27;old&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PAGER</td>
          <td class="code"><pre>&#x27;less&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PATH</td>
          <td class="code"><pre>&#x27;/Users/yoobmooyeol/.cursor/extensions/ms-python.python-2024.12.3-darwin-arm64/python_files/deactivate/zsh:/Users/yoobmooyeol/project/Florence_project/.venv/bin:/opt/homebrew/bin:/Users/yoobmooyeol/.pyenv/shims:/opt/anaconda3/bin:/opt/anaconda3/condabin:/opt/anaconda3:/opt/anaconda3/bin:/Users/yoobmooyeol/.cursor/extensions/ms-python.python-2024.12.3-darwin-arm64/python_files/deactivate/zsh:/Users/yoobmooyeol/project/Florence_project/.venv/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/Library/Frameworks/Python.framework/Versions/3.10/bin:/Library/Frameworks/Python.framework/Versions/3.12/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/yoobmooyeol/.cursor/extensions/ms-python.python-2024.12.3-darwin-arm64/python_files/deactivate/zsh:/Users/yoobmooyeol/project/Florence_project/.venv/bin&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PATH_INFO</td>
          <td class="code"><pre>&#x27;/v1/llm/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PS1</td>
          <td class="code"><pre>&#x27;(.venv) %n@%m %~$ &#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PWD</td>
          <td class="code"><pre>&#x27;/Users/yoobmooyeol/project/Florence_project&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PYENV_ROOT</td>
          <td class="code"><pre>&#x27;/Users/yoobmooyeol/.pyenv&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PYENV_SHELL</td>
          <td class="code"><pre>&#x27;zsh&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>QUERY_STRING</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>REMOTE_ADDR</td>
          <td class="code"><pre>&#x27;127.0.0.1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>REMOTE_HOST</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>REQUEST_METHOD</td>
          <td class="code"><pre>&#x27;POST&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>RUN_MAIN</td>
          <td class="code"><pre>&#x27;true&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SCRIPT_NAME</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECRET_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_NAME</td>
          <td class="code"><pre>&#x27;1.0.0.127.in-addr.arpa&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_PORT</td>
          <td class="code"><pre>&#x27;8000&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_PROTOCOL</td>
          <td class="code"><pre>&#x27;HTTP/1.1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_SOFTWARE</td>
          <td class="code"><pre>&#x27;WSGIServer/0.2&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SHELL</td>
          <td class="code"><pre>&#x27;/bin/zsh&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SHLVL</td>
          <td class="code"><pre>&#x27;1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SSH_AUTH_SOCK</td>
          <td class="code"><pre>&#x27;/private/tmp/com.apple.launchd.QZsEeGmaFx/Listeners&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TERM</td>
          <td class="code"><pre>&#x27;xterm-256color&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TERM_PROGRAM</td>
          <td class="code"><pre>&#x27;vscode&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TERM_PROGRAM_VERSION</td>
          <td class="code"><pre>&#x27;0.46.9&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TMPDIR</td>
          <td class="code"><pre>&#x27;/var/folders/b2/l125pzjx62sg13x2702_bkfh0000gn/T/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TZ</td>
          <td class="code"><pre>&#x27;Asia/Seoul&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>USER</td>
          <td class="code"><pre>&#x27;yoobmooyeol&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>USER_ZDOTDIR</td>
          <td class="code"><pre>&#x27;/Users/yoobmooyeol&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>VIRTUAL_ENV</td>
          <td class="code"><pre>&#x27;/Users/yoobmooyeol/project/Florence_project/.venv&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>VIRTUAL_ENV_PROMPT</td>
          <td class="code"><pre>&#x27;(.venv) &#x27;</pre></td>
        </tr>
      
        <tr>
          <td>VSCODE_GIT_ASKPASS_EXTRA_ARGS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>VSCODE_GIT_ASKPASS_MAIN</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>VSCODE_GIT_ASKPASS_NODE</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>VSCODE_GIT_IPC_HANDLE</td>
          <td class="code"><pre>&#x27;/var/folders/b2/l125pzjx62sg13x2702_bkfh0000gn/T/vscode-git-7ca7255dd9.sock&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>VSCODE_INJECTION</td>
          <td class="code"><pre>&#x27;1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>VSCODE_NONCE</td>
          <td class="code"><pre>&#x27;6afe52ea-c0c0-443a-b1e1-e72c74225fab&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XPC_FLAGS</td>
          <td class="code"><pre>&#x27;0x0&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>XPC_SERVICE_NAME</td>
          <td class="code"><pre>&#x27;0&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>ZDOTDIR</td>
          <td class="code"><pre>&#x27;/Users/yoobmooyeol&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>ZSH</td>
          <td class="code"><pre>&#x27;/Users/yoobmooyeol/.oh-my-zsh&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>_</td>
          <td class="code"><pre>&#x27;/Users/yoobmooyeol/project/Florence_project/.venv/bin/python&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>_CE_CONDA</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>_CE_M</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>_P9K_SSH_TTY</td>
          <td class="code"><pre>&#x27;/dev/ttys047&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>_P9K_TTY</td>
          <td class="code"><pre>&#x27;/dev/ttys047&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>__CFBundleIdentifier</td>
          <td class="code"><pre>&#x27;com.todesktop.230313mzl4w4u92&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>__CF_USER_TEXT_ENCODING</td>
          <td class="code"><pre>&#x27;0x1F5:0x3:0x33&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.errors</td>
          <td class="code"><pre>&lt;_io.TextIOWrapper name=&#x27;&lt;stderr&gt;&#x27; mode=&#x27;w&#x27; encoding=&#x27;utf-8&#x27;&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.file_wrapper</td>
          <td class="code"><pre>&lt;class &#x27;wsgiref.util.FileWrapper&#x27;&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.input</td>
          <td class="code"><pre>&lt;django.core.handlers.wsgi.LimitedStream object at 0x11ddd8310&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.multiprocess</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.multithread</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.run_once</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.url_scheme</td>
          <td class="code"><pre>&#x27;http&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.version</td>
          <td class="code"><pre>(1, 0)</pre></td>
        </tr>
      
    </tbody>
  </table>


  <h3 id="settings-info">Settings</h3>
  <h4>Using settings module <code>config.settings</code></h4>
  <table class="req">
    <thead>
      <tr>
        <th>Setting</th>
        <th>Value</th>
      </tr>
    </thead>
    <tbody>
      
        <tr>
          <td>ABSOLUTE_URL_OVERRIDES</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>ADMINS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>ALLOWED_HOSTS</td>
          <td class="code"><pre>[&#x27;*&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>APPEND_SLASH</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>AUTHENTICATION_BACKENDS</td>
          <td class="code"><pre>[&#x27;django.contrib.auth.backends.ModelBackend&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>AUTH_PASSWORD_VALIDATORS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AUTH_USER_MODEL</td>
          <td class="code"><pre>&#x27;accounts.User&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>BASE_DIR</td>
          <td class="code"><pre>PosixPath(&#x27;/Users/yoobmooyeol/project/Florence_project&#x27;)</pre></td>
        </tr>
      
        <tr>
          <td>CACHES</td>
          <td class="code"><pre>{&#x27;default&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.core.cache.backends.locmem.LocMemCache&#x27;}}</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_ALIAS</td>
          <td class="code"><pre>&#x27;default&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_KEY_PREFIX</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_SECONDS</td>
          <td class="code"><pre>600</pre></td>
        </tr>
      
        <tr>
          <td>CORS_ALLOW_ALL_ORIGINS</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>CORS_ALLOW_CREDENTIALS</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>CORS_ALLOW_HEADERS</td>
          <td class="code"><pre>[&#x27;accept&#x27;,
 &#x27;authorization&#x27;,
 &#x27;content-type&#x27;,
 &#x27;user-agent&#x27;,
 &#x27;x-csrftoken&#x27;,
 &#x27;x-requested-with&#x27;,
 &#x27;content-type&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_AGE</td>
          <td class="code"><pre>31449600</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_HTTPONLY</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_MASKED</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_NAME</td>
          <td class="code"><pre>&#x27;csrftoken&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_PATH</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_SAMESITE</td>
          <td class="code"><pre>&#x27;Lax&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_FAILURE_VIEW</td>
          <td class="code"><pre>&#x27;django.views.csrf.csrf_failure&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_HEADER_NAME</td>
          <td class="code"><pre>&#x27;HTTP_X_CSRFTOKEN&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_TRUSTED_ORIGINS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_USE_SESSIONS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>DATABASES</td>
          <td class="code"><pre>{&#x27;default&#x27;: {&#x27;ATOMIC_REQUESTS&#x27;: False,
             &#x27;AUTOCOMMIT&#x27;: True,
             &#x27;CONN_HEALTH_CHECKS&#x27;: False,
             &#x27;CONN_MAX_AGE&#x27;: 0,
             &#x27;ENGINE&#x27;: &#x27;django.db.backends.postgresql&#x27;,
             &#x27;HOST&#x27;: &#x27;localhost&#x27;,
             &#x27;NAME&#x27;: &#x27;florence_db&#x27;,
             &#x27;OPTIONS&#x27;: {},
             &#x27;PASSWORD&#x27;: &#x27;********************&#x27;,
             &#x27;PORT&#x27;: &#x27;5432&#x27;,
             &#x27;TEST&#x27;: {&#x27;CHARSET&#x27;: None,
                      &#x27;COLLATION&#x27;: None,
                      &#x27;MIGRATE&#x27;: True,
                      &#x27;MIRROR&#x27;: None,
                      &#x27;NAME&#x27;: None},
             &#x27;TIME_ZONE&#x27;: None,
             &#x27;USER&#x27;: &#x27;postgres&#x27;}}</pre></td>
        </tr>
      
        <tr>
          <td>DATABASE_ROUTERS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_MEMORY_SIZE</td>
          <td class="code"><pre>2621440</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_NUMBER_FIELDS</td>
          <td class="code"><pre>1000</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_NUMBER_FILES</td>
          <td class="code"><pre>100</pre></td>
        </tr>
      
        <tr>
          <td>DATETIME_FORMAT</td>
          <td class="code"><pre>&#x27;N j, Y, P&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DATETIME_INPUT_FORMATS</td>
          <td class="code"><pre>[&#x27;%Y-%m-%d %H:%M:%S&#x27;,
 &#x27;%Y-%m-%d %H:%M:%S.%f&#x27;,
 &#x27;%Y-%m-%d %H:%M&#x27;,
 &#x27;%m/%d/%Y %H:%M:%S&#x27;,
 &#x27;%m/%d/%Y %H:%M:%S.%f&#x27;,
 &#x27;%m/%d/%Y %H:%M&#x27;,
 &#x27;%m/%d/%y %H:%M:%S&#x27;,
 &#x27;%m/%d/%y %H:%M:%S.%f&#x27;,
 &#x27;%m/%d/%y %H:%M&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>DATE_FORMAT</td>
          <td class="code"><pre>&#x27;N j, Y&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DATE_INPUT_FORMATS</td>
          <td class="code"><pre>[&#x27;%Y-%m-%d&#x27;,
 &#x27;%m/%d/%Y&#x27;,
 &#x27;%m/%d/%y&#x27;,
 &#x27;%b %d %Y&#x27;,
 &#x27;%b %d, %Y&#x27;,
 &#x27;%d %b %Y&#x27;,
 &#x27;%d %b, %Y&#x27;,
 &#x27;%B %d %Y&#x27;,
 &#x27;%B %d, %Y&#x27;,
 &#x27;%d %B %Y&#x27;,
 &#x27;%d %B, %Y&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>DEBUG</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>DEBUG_PROPAGATE_EXCEPTIONS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>DECIMAL_SEPARATOR</td>
          <td class="code"><pre>&#x27;.&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_AUTO_FIELD</td>
          <td class="code"><pre>&#x27;django.db.models.BigAutoField&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_CHARSET</td>
          <td class="code"><pre>&#x27;utf-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_EXCEPTION_REPORTER</td>
          <td class="code"><pre>&#x27;django.views.debug.ExceptionReporter&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_EXCEPTION_REPORTER_FILTER</td>
          <td class="code"><pre>&#x27;django.views.debug.SafeExceptionReporterFilter&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_FILE_STORAGE</td>
          <td class="code"><pre>&#x27;django.core.files.storage.FileSystemStorage&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_FROM_EMAIL</td>
          <td class="code"><pre>&#x27;webmaster@localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_INDEX_TABLESPACE</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_TABLESPACE</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DISALLOWED_USER_AGENTS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_BACKEND</td>
          <td class="code"><pre>&#x27;django.core.mail.backends.smtp.EmailBackend&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST</td>
          <td class="code"><pre>&#x27;localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST_PASSWORD</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST_USER</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_PORT</td>
          <td class="code"><pre>25</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SSL_CERTFILE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SSL_KEYFILE</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SUBJECT_PREFIX</td>
          <td class="code"><pre>&#x27;[Django] &#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_TIMEOUT</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_LOCALTIME</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_SSL</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_TLS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_DIRECTORY_PERMISSIONS</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_HANDLERS</td>
          <td class="code"><pre>[&#x27;django.core.files.uploadhandler.MemoryFileUploadHandler&#x27;,
 &#x27;django.core.files.uploadhandler.TemporaryFileUploadHandler&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_MAX_MEMORY_SIZE</td>
          <td class="code"><pre>2621440</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_PERMISSIONS</td>
          <td class="code"><pre>420</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_TEMP_DIR</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FIRST_DAY_OF_WEEK</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>FIXTURE_DIRS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>FORCE_SCRIPT_NAME</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FORMAT_MODULE_PATH</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FORM_RENDERER</td>
          <td class="code"><pre>&#x27;django.forms.renderers.DjangoTemplates&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>IGNORABLE_404_URLS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>INSTALLED_APPS</td>
          <td class="code"><pre>[&#x27;django.contrib.admin&#x27;,
 &#x27;django.contrib.auth&#x27;,
 &#x27;django.contrib.contenttypes&#x27;,
 &#x27;django.contrib.sessions&#x27;,
 &#x27;django.contrib.messages&#x27;,
 &#x27;django.contrib.staticfiles&#x27;,
 &#x27;rest_framework_simplejwt&#x27;,
 &#x27;rest_framework&#x27;,
 &#x27;corsheaders&#x27;,
 &#x27;rag&#x27;,
 &#x27;accounts&#x27;,
 &#x27;llm&#x27;,
 &#x27;healthcare&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>INTERNAL_IPS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGES</td>
          <td class="code"><pre>[(&#x27;af&#x27;, &#x27;Afrikaans&#x27;),
 (&#x27;ar&#x27;, &#x27;Arabic&#x27;),
 (&#x27;ar-dz&#x27;, &#x27;Algerian Arabic&#x27;),
 (&#x27;ast&#x27;, &#x27;Asturian&#x27;),
 (&#x27;az&#x27;, &#x27;Azerbaijani&#x27;),
 (&#x27;bg&#x27;, &#x27;Bulgarian&#x27;),
 (&#x27;be&#x27;, &#x27;Belarusian&#x27;),
 (&#x27;bn&#x27;, &#x27;Bengali&#x27;),
 (&#x27;br&#x27;, &#x27;Breton&#x27;),
 (&#x27;bs&#x27;, &#x27;Bosnian&#x27;),
 (&#x27;ca&#x27;, &#x27;Catalan&#x27;),
 (&#x27;ckb&#x27;, &#x27;Central Kurdish (Sorani)&#x27;),
 (&#x27;cs&#x27;, &#x27;Czech&#x27;),
 (&#x27;cy&#x27;, &#x27;Welsh&#x27;),
 (&#x27;da&#x27;, &#x27;Danish&#x27;),
 (&#x27;de&#x27;, &#x27;German&#x27;),
 (&#x27;dsb&#x27;, &#x27;Lower Sorbian&#x27;),
 (&#x27;el&#x27;, &#x27;Greek&#x27;),
 (&#x27;en&#x27;, &#x27;English&#x27;),
 (&#x27;en-au&#x27;, &#x27;Australian English&#x27;),
 (&#x27;en-gb&#x27;, &#x27;British English&#x27;),
 (&#x27;eo&#x27;, &#x27;Esperanto&#x27;),
 (&#x27;es&#x27;, &#x27;Spanish&#x27;),
 (&#x27;es-ar&#x27;, &#x27;Argentinian Spanish&#x27;),
 (&#x27;es-co&#x27;, &#x27;Colombian Spanish&#x27;),
 (&#x27;es-mx&#x27;, &#x27;Mexican Spanish&#x27;),
 (&#x27;es-ni&#x27;, &#x27;Nicaraguan Spanish&#x27;),
 (&#x27;es-ve&#x27;, &#x27;Venezuelan Spanish&#x27;),
 (&#x27;et&#x27;, &#x27;Estonian&#x27;),
 (&#x27;eu&#x27;, &#x27;Basque&#x27;),
 (&#x27;fa&#x27;, &#x27;Persian&#x27;),
 (&#x27;fi&#x27;, &#x27;Finnish&#x27;),
 (&#x27;fr&#x27;, &#x27;French&#x27;),
 (&#x27;fy&#x27;, &#x27;Frisian&#x27;),
 (&#x27;ga&#x27;, &#x27;Irish&#x27;),
 (&#x27;gd&#x27;, &#x27;Scottish Gaelic&#x27;),
 (&#x27;gl&#x27;, &#x27;Galician&#x27;),
 (&#x27;he&#x27;, &#x27;Hebrew&#x27;),
 (&#x27;hi&#x27;, &#x27;Hindi&#x27;),
 (&#x27;hr&#x27;, &#x27;Croatian&#x27;),
 (&#x27;hsb&#x27;, &#x27;Upper Sorbian&#x27;),
 (&#x27;hu&#x27;, &#x27;Hungarian&#x27;),
 (&#x27;hy&#x27;, &#x27;Armenian&#x27;),
 (&#x27;ia&#x27;, &#x27;Interlingua&#x27;),
 (&#x27;id&#x27;, &#x27;Indonesian&#x27;),
 (&#x27;ig&#x27;, &#x27;Igbo&#x27;),
 (&#x27;io&#x27;, &#x27;Ido&#x27;),
 (&#x27;is&#x27;, &#x27;Icelandic&#x27;),
 (&#x27;it&#x27;, &#x27;Italian&#x27;),
 (&#x27;ja&#x27;, &#x27;Japanese&#x27;),
 (&#x27;ka&#x27;, &#x27;Georgian&#x27;),
 (&#x27;kab&#x27;, &#x27;Kabyle&#x27;),
 (&#x27;kk&#x27;, &#x27;Kazakh&#x27;),
 (&#x27;km&#x27;, &#x27;Khmer&#x27;),
 (&#x27;kn&#x27;, &#x27;Kannada&#x27;),
 (&#x27;ko&#x27;, &#x27;Korean&#x27;),
 (&#x27;ky&#x27;, &#x27;Kyrgyz&#x27;),
 (&#x27;lb&#x27;, &#x27;Luxembourgish&#x27;),
 (&#x27;lt&#x27;, &#x27;Lithuanian&#x27;),
 (&#x27;lv&#x27;, &#x27;Latvian&#x27;),
 (&#x27;mk&#x27;, &#x27;Macedonian&#x27;),
 (&#x27;ml&#x27;, &#x27;Malayalam&#x27;),
 (&#x27;mn&#x27;, &#x27;Mongolian&#x27;),
 (&#x27;mr&#x27;, &#x27;Marathi&#x27;),
 (&#x27;ms&#x27;, &#x27;Malay&#x27;),
 (&#x27;my&#x27;, &#x27;Burmese&#x27;),
 (&#x27;nb&#x27;, &#x27;Norwegian Bokmål&#x27;),
 (&#x27;ne&#x27;, &#x27;Nepali&#x27;),
 (&#x27;nl&#x27;, &#x27;Dutch&#x27;),
 (&#x27;nn&#x27;, &#x27;Norwegian Nynorsk&#x27;),
 (&#x27;os&#x27;, &#x27;Ossetic&#x27;),
 (&#x27;pa&#x27;, &#x27;Punjabi&#x27;),
 (&#x27;pl&#x27;, &#x27;Polish&#x27;),
 (&#x27;pt&#x27;, &#x27;Portuguese&#x27;),
 (&#x27;pt-br&#x27;, &#x27;Brazilian Portuguese&#x27;),
 (&#x27;ro&#x27;, &#x27;Romanian&#x27;),
 (&#x27;ru&#x27;, &#x27;Russian&#x27;),
 (&#x27;sk&#x27;, &#x27;Slovak&#x27;),
 (&#x27;sl&#x27;, &#x27;Slovenian&#x27;),
 (&#x27;sq&#x27;, &#x27;Albanian&#x27;),
 (&#x27;sr&#x27;, &#x27;Serbian&#x27;),
 (&#x27;sr-latn&#x27;, &#x27;Serbian Latin&#x27;),
 (&#x27;sv&#x27;, &#x27;Swedish&#x27;),
 (&#x27;sw&#x27;, &#x27;Swahili&#x27;),
 (&#x27;ta&#x27;, &#x27;Tamil&#x27;),
 (&#x27;te&#x27;, &#x27;Telugu&#x27;),
 (&#x27;tg&#x27;, &#x27;Tajik&#x27;),
 (&#x27;th&#x27;, &#x27;Thai&#x27;),
 (&#x27;tk&#x27;, &#x27;Turkmen&#x27;),
 (&#x27;tr&#x27;, &#x27;Turkish&#x27;),
 (&#x27;tt&#x27;, &#x27;Tatar&#x27;),
 (&#x27;udm&#x27;, &#x27;Udmurt&#x27;),
 (&#x27;uk&#x27;, &#x27;Ukrainian&#x27;),
 (&#x27;ur&#x27;, &#x27;Urdu&#x27;),
 (&#x27;uz&#x27;, &#x27;Uzbek&#x27;),
 (&#x27;vi&#x27;, &#x27;Vietnamese&#x27;),
 (&#x27;zh-hans&#x27;, &#x27;Simplified Chinese&#x27;),
 (&#x27;zh-hant&#x27;, &#x27;Traditional Chinese&#x27;)]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGES_BIDI</td>
          <td class="code"><pre>[&#x27;he&#x27;, &#x27;ar&#x27;, &#x27;ar-dz&#x27;, &#x27;ckb&#x27;, &#x27;fa&#x27;, &#x27;ur&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_CODE</td>
          <td class="code"><pre>&#x27;ko-kr&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_AGE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_HTTPONLY</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_NAME</td>
          <td class="code"><pre>&#x27;django_language&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_PATH</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_SAMESITE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>LLM_MODEL</td>
          <td class="code"><pre>&#x27;gpt-4o-mini&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOCALE_PATHS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>LOGGING</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>LOGGING_CONFIG</td>
          <td class="code"><pre>&#x27;logging.config.dictConfig&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGIN_REDIRECT_URL</td>
          <td class="code"><pre>&#x27;/accounts/profile/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGIN_URL</td>
          <td class="code"><pre>&#x27;/accounts/login/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGOUT_REDIRECT_URL</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>MANAGERS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>MEDIA_ROOT</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MEDIA_URL</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MESSAGE_STORAGE</td>
          <td class="code"><pre>&#x27;django.contrib.messages.storage.fallback.FallbackStorage&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MIDDLEWARE</td>
          <td class="code"><pre>[&#x27;corsheaders.middleware.CorsMiddleware&#x27;,
 &#x27;django.middleware.security.SecurityMiddleware&#x27;,
 &#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;,
 &#x27;django.middleware.common.CommonMiddleware&#x27;,
 &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,
 &#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;,
 &#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;,
 &#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>MIGRATION_MODULES</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>MONTH_DAY_FORMAT</td>
          <td class="code"><pre>&#x27;F j&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>NUMBER_GROUPING</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>OPENAI_API_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PASSWORD_HASHERS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PASSWORD_RESET_TIMEOUT</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PREPEND_WWW</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>REST_FRAMEWORK</td>
          <td class="code"><pre>{&#x27;DEFAULT_AUTHENTICATION_CLASSES&#x27;: [&#x27;rest_framework_simplejwt.authentication.JWTAuthentication&#x27;],
 &#x27;DEFAULT_PERMISSION_CLASSES&#x27;: [&#x27;rest_framework.permissions.IsAuthenticated&#x27;],
 &#x27;DEFAULT_RENDERER_CLASSES&#x27;: [&#x27;rest_framework.renderers.JSONRenderer&#x27;],
 &#x27;DEFAULT_THROTTLE_CLASSES&#x27;: [&#x27;rest_framework.throttling.AnonRateThrottle&#x27;,
                              &#x27;rest_framework.throttling.UserRateThrottle&#x27;],
 &#x27;DEFAULT_THROTTLE_RATES&#x27;: {&#x27;anon&#x27;: &#x27;100/day&#x27;, &#x27;user&#x27;: &#x27;1000/day&#x27;},
 &#x27;EXCEPTION_HANDLER&#x27;: &#x27;config.exception_handler.custom_exception_handler&#x27;,
 &#x27;NON_FIELD_ERRORS_KEY&#x27;: &#x27;********************&#x27;}</pre></td>
        </tr>
      
        <tr>
          <td>ROOT_URLCONF</td>
          <td class="code"><pre>&#x27;config.urls&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECRET_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECRET_KEY_FALLBACKS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_CONTENT_TYPE_NOSNIFF</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_CROSS_ORIGIN_OPENER_POLICY</td>
          <td class="code"><pre>&#x27;same-origin&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_INCLUDE_SUBDOMAINS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_PRELOAD</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_SECONDS</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_PROXY_SSL_HEADER</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_REDIRECT_EXEMPT</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_REFERRER_POLICY</td>
          <td class="code"><pre>&#x27;same-origin&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_SSL_HOST</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_SSL_REDIRECT</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_EMAIL</td>
          <td class="code"><pre>&#x27;root@localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_CACHE_ALIAS</td>
          <td class="code"><pre>&#x27;default&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_AGE</td>
          <td class="code"><pre>1209600</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_HTTPONLY</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_NAME</td>
          <td class="code"><pre>&#x27;sessionid&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_PATH</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_SAMESITE</td>
          <td class="code"><pre>&#x27;Lax&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_ENGINE</td>
          <td class="code"><pre>&#x27;django.contrib.sessions.backends.db&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_EXPIRE_AT_BROWSER_CLOSE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_FILE_PATH</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_SAVE_EVERY_REQUEST</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_SERIALIZER</td>
          <td class="code"><pre>&#x27;django.contrib.sessions.serializers.JSONSerializer&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SETTINGS_MODULE</td>
          <td class="code"><pre>&#x27;config.settings&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SHORT_DATETIME_FORMAT</td>
          <td class="code"><pre>&#x27;m/d/Y P&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SHORT_DATE_FORMAT</td>
          <td class="code"><pre>&#x27;m/d/Y&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SIGNING_BACKEND</td>
          <td class="code"><pre>&#x27;django.core.signing.TimestampSigner&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SILENCED_SYSTEM_CHECKS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>SIMPLE_JWT</td>
          <td class="code"><pre>{&#x27;ACCESS_TOKEN_LIFETIME&#x27;: &#x27;********************&#x27;,
 &#x27;BLACKLIST_AFTER_ROTATION&#x27;: True,
 &#x27;REFRESH_TOKEN_LIFETIME&#x27;: &#x27;********************&#x27;,
 &#x27;ROTATE_REFRESH_TOKENS&#x27;: &#x27;********************&#x27;,
 &#x27;USER_ID_CLAIM&#x27;: &#x27;user_id&#x27;,
 &#x27;USER_ID_FIELD&#x27;: &#x27;user_id&#x27;}</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_DIRS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_FINDERS</td>
          <td class="code"><pre>[&#x27;django.contrib.staticfiles.finders.FileSystemFinder&#x27;,
 &#x27;django.contrib.staticfiles.finders.AppDirectoriesFinder&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_STORAGE</td>
          <td class="code"><pre>&#x27;django.contrib.staticfiles.storage.StaticFilesStorage&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>STATIC_ROOT</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>STATIC_URL</td>
          <td class="code"><pre>&#x27;/static/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>STORAGES</td>
          <td class="code"><pre>{&#x27;default&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.core.files.storage.FileSystemStorage&#x27;},
 &#x27;staticfiles&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.contrib.staticfiles.storage.StaticFilesStorage&#x27;}}</pre></td>
        </tr>
      
        <tr>
          <td>TEMPLATES</td>
          <td class="code"><pre>[{&#x27;APP_DIRS&#x27;: True,
  &#x27;BACKEND&#x27;: &#x27;django.template.backends.django.DjangoTemplates&#x27;,
  &#x27;DIRS&#x27;: [&#x27;/Users/yoobmooyeol/project/Florence_project/templates&#x27;],
  &#x27;OPTIONS&#x27;: {&#x27;context_processors&#x27;: [&#x27;django.template.context_processors.debug&#x27;,
                                     &#x27;django.template.context_processors.request&#x27;,
                                     &#x27;django.contrib.auth.context_processors.auth&#x27;,
                                     &#x27;django.contrib.messages.context_processors.messages&#x27;]}}]</pre></td>
        </tr>
      
        <tr>
          <td>TEST_NON_SERIALIZED_APPS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>TEST_RUNNER</td>
          <td class="code"><pre>&#x27;django.test.runner.DiscoverRunner&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>THOUSAND_SEPARATOR</td>
          <td class="code"><pre>&#x27;,&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TIME_FORMAT</td>
          <td class="code"><pre>&#x27;P&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TIME_INPUT_FORMATS</td>
          <td class="code"><pre>[&#x27;%H:%M:%S&#x27;, &#x27;%H:%M:%S.%f&#x27;, &#x27;%H:%M&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>TIME_ZONE</td>
          <td class="code"><pre>&#x27;Asia/Seoul&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>USE_DEPRECATED_PYTZ</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_I18N</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>USE_L10N</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>USE_THOUSAND_SEPARATOR</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_TZ</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>USE_X_FORWARDED_HOST</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_X_FORWARDED_PORT</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>WSGI_APPLICATION</td>
          <td class="code"><pre>&#x27;config.wsgi.application&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>X_FRAME_OPTIONS</td>
          <td class="code"><pre>&#x27;DENY&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>YEAR_MONTH_FORMAT</td>
          <td class="code"><pre>&#x27;F Y&#x27;</pre></td>
        </tr>
      
    </tbody>
  </table>

</div>

  <div id="explanation">
    <p>
      You’re seeing this error because you have <code>DEBUG = True</code> in your
      Django settings file. Change that to <code>False</code>, and Django will
      display a standard page generated by the handler for this status code.
    </p>
  </div>

</body>
</html>
